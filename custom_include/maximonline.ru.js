(function () {
var mainStyleCssPath = "//cdn.probtn.com/style.css";
var jquerypepPath =  "//cdn.probtn.com/libs/jquery.pep.min.js";
var fancyboxPath = "//cdn.probtn.com/libs/jquery.fancybox.min.js";
var fancyboxCssPath = "//cdn.probtn.com/libs/jquery.fancybox.min.css";
var probtnPath = "//cdn.probtn.com/probtn.js"; //"//probtnexample1.azurewebsites.net/probtn2.js";
var jqueryPath = '//cdnjs.cloudflare.com/ajax/libs/jquery/1.9.1/jquery.min.js';
var isServerCommunicationEnabled = true;
var useLocalFileSettings = false;
var localSettingsPath = "settings.json";
var isHPMD = false;
var domain = 'm.maximonline.ru';
try {
    window.probtn_hpmd = hpmd;
} catch(ex) {
    window.probtn_hpmd = null;
}

var vernums = [0,0,0];
try {
    vernums = jQuery.fn.jquery.split('.');
} catch(ex) { }

var loadProbtn = function (jQuery) {
    //jQuery.getScript(probtnPath, function () {

    //probtn.js
    function probtn_callPlayer(t, n) { console.log("probtn_callPlayer"); var e; (null == n || void 0 == n) && (n = "playVideo"); var i = window.JSON.stringify({ event: "command", func: n }); try { e = document.getElementById(t), e.contentWindow.postMessage(i, "https://www.youtube.com") } catch (a) { console.log(a) } } !function (t, n) { "use strict"; var e = "0.7.8", i = "", a = "?", o = "function", r = "undefined", s = "object", c = "string", l = "major", p = "model", d = "name", u = "type", m = "vendor", b = "version", f = "architecture", g = "console", h = "mobile", v = "tablet", w = "smarttv", y = "wearable", S = "embedded", B = { extend: function (t, n) { for (var e in n) -1 !== "browser cpu device engine os".indexOf(e) && n[e].length % 2 === 0 && (t[e] = n[e].concat(t[e])); return t }, has: function (t, n) { return "string" == typeof t ? -1 !== n.toLowerCase().indexOf(t.toLowerCase()) : !1 }, lowerize: function (t) { return t.toLowerCase() }, major: function (t) { return typeof t === c ? t.split(".")[0] : n } }, z = { rgx: function () { for (var t, e, i, a, c, l, p, d = 0, u = arguments; d < u.length && !l;) { var m = u[d], b = u[d + 1]; if (typeof t === r) { t = {}; for (a in b) c = b[a], typeof c === s ? t[c[0]] = n : t[c] = n } for (e = i = 0; e < m.length && !l;) if (l = m[e++].exec(this.getUA())) for (a = 0; a < b.length; a++) p = l[++i], c = b[a], typeof c === s && c.length > 0 ? 2 == c.length ? t[c[0]] = typeof c[1] == o ? c[1].call(this, p) : c[1] : 3 == c.length ? t[c[0]] = typeof c[1] !== o || c[1].exec && c[1].test ? p ? p.replace(c[1], c[2]) : n : p ? c[1].call(this, p, c[2]) : n : 4 == c.length && (t[c[0]] = p ? c[3].call(this, p.replace(c[1], c[2])) : n) : t[c] = p ? p : n; d += 2 } return t }, str: function (t, e) { for (var i in e) if (typeof e[i] === s && e[i].length > 0) { for (var o = 0; o < e[i].length; o++) if (B.has(e[i][o], t)) return i === a ? n : i } else if (B.has(e[i], t)) return i === a ? n : i; return t } }, I = { browser: { oldsafari: { version: { "1.0": "/8", 1.2: "/1", 1.3: "/3", "2.0": "/412", "2.0.2": "/416", "2.0.3": "/417", "2.0.4": "/419", "?": "/" } } }, device: { amazon: { model: { "Fire Phone": ["SD", "KF"] } }, sprint: { model: { "Evo Shift 4G": "7373KT" }, vendor: { HTC: "APA", Sprint: "Sprint" } } }, os: { windows: { version: { ME: "4.90", "NT 3.11": "NT3.51", "NT 4.0": "NT4.0", 2000: "NT 5.0", XP: ["NT 5.1", "NT 5.2"], Vista: "NT 6.0", 7: "NT 6.1", 8: "NT 6.2", 8.1: "NT 6.3", 10: ["NT 6.4", "NT 10.0"], RT: "ARM" } } } }, C = { browser: [[/(opera\smini)\/([\w\.-]+)/i, /(opera\s[mobiletab]+).+version\/([\w\.-]+)/i, /(opera).+version\/([\w\.]+)/i, /(opera)[\/\s]+([\w\.]+)/i], [d, b], [/\s(opr)\/([\w\.]+)/i], [[d, "Opera"], b], [/(kindle)\/([\w\.]+)/i, /(lunascape|maxthon|netfront|jasmine|blazer)[\/\s]?([\w\.]+)*/i, /(avant\s|iemobile|slim|baidu)(?:browser)?[\/\s]?([\w\.]*)/i, /(?:ms|\()(ie)\s([\w\.]+)/i, /(rekonq)\/([\w\.]+)*/i, /(chromium|flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi)\/([\w\.-]+)/i], [d, b], [/(trident).+rv[:\s]([\w\.]+).+like\sgecko/i], [[d, "IE"], b], [/(edge)\/((\d+)?[\w\.]+)/i], [d, b], [/(yabrowser)\/([\w\.]+)/i], [[d, "Yandex"], b], [/(comodo_dragon)\/([\w\.]+)/i], [[d, /_/g, " "], b], [/(chrome|omniweb|arora|[tizenoka]{5}\s?browser)\/v?([\w\.]+)/i, /(uc\s?browser|qqbrowser)[\/\s]?([\w\.]+)/i], [d, b], [/(dolfin)\/([\w\.]+)/i], [[d, "Dolphin"], b], [/((?:android.+)crmo|crios)\/([\w\.]+)/i], [[d, "Chrome"], b], [/XiaoMi\/MiuiBrowser\/([\w\.]+)/i], [b, [d, "MIUI Browser"]], [/android.+version\/([\w\.]+)\s+(?:mobile\s?safari|safari)/i], [b, [d, "Android Browser"]], [/FBAV\/([\w\.]+);/i], [b, [d, "Facebook"]], [/version\/([\w\.]+).+?mobile\/\w+\s(safari)/i], [b, [d, "Mobile Safari"]], [/version\/([\w\.]+).+?(mobile\s?safari|safari)/i], [b, d], [/webkit.+?(mobile\s?safari|safari)(\/[\w\.]+)/i], [d, [b, z.str, I.browser.oldsafari.version]], [/(konqueror)\/([\w\.]+)/i, /(webkit|khtml)\/([\w\.]+)/i], [d, b], [/(navigator|netscape)\/([\w\.-]+)/i], [[d, "Netscape"], b], [/(swiftfox)/i, /(icedragon|iceweasel|camino|chimera|fennec|maemo\sbrowser|minimo|conkeror)[\/\s]?([\w\.\+]+)/i, /(firefox|seamonkey|k-meleon|icecat|iceape|firebird|phoenix)\/([\w\.-]+)/i, /(mozilla)\/([\w\.]+).+rv\:.+gecko\/\d+/i, /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf)[\/\s]?([\w\.]+)/i, /(links)\s\(([\w\.]+)/i, /(gobrowser)\/?([\w\.]+)*/i, /(ice\s?browser)\/v?([\w\._]+)/i, /(mosaic)[\/\s]([\w\.]+)/i], [d, b]], cpu: [[/(?:(amd|x(?:(?:86|64)[_-])?|wow|win)64)[;\)]/i], [[f, "amd64"]], [/(ia32(?=;))/i], [[f, B.lowerize]], [/((?:i[346]|x)86)[;\)]/i], [[f, "ia32"]], [/windows\s(ce|mobile);\sppc;/i], [[f, "arm"]], [/((?:ppc|powerpc)(?:64)?)(?:\smac|;|\))/i], [[f, /ower/, "", B.lowerize]], [/(sun4\w)[;\)]/i], [[f, "sparc"]], [/((?:avr32|ia64(?=;))|68k(?=\))|arm(?:64|(?=v\d+;))|(?=atmel\s)avr|(?:irix|mips|sparc)(?:64)?(?=;)|pa-risc)/i], [[f, B.lowerize]]], device: [[/\((ipad|playbook);[\w\s\);-]+(rim|apple)/i], [p, m, [u, v]], [/applecoremedia\/[\w\.]+ \((ipad)/], [p, [m, "Apple"], [u, v]], [/(apple\s{0,1}tv)/i], [[p, "Apple TV"], [m, "Apple"]], [/(archos)\s(gamepad2?)/i, /(hp).+(touchpad)/i, /(kindle)\/([\w\.]+)/i, /\s(nook)[\w\s]+build\/(\w+)/i, /(dell)\s(strea[kpr\s\d]*[\dko])/i], [m, p, [u, v]], [/(kf[A-z]+)\sbuild\/[\w\.]+.*silk\//i], [p, [m, "Amazon"], [u, v]], [/(sd|kf)[0349hijorstuw]+\sbuild\/[\w\.]+.*silk\//i], [[p, z.str, I.device.amazon.model], [m, "Amazon"], [u, h]], [/\((ip[honed|\s\w*]+);.+(apple)/i], [p, m, [u, h]], [/\((ip[honed|\s\w*]+);/i], [p, [m, "Apple"], [u, h]], [/(blackberry)[\s-]?(\w+)/i, /(blackberry|benq|palm(?=\-)|sonyericsson|acer|asus|dell|huawei|meizu|motorola|polytron)[\s_-]?([\w-]+)*/i, /(hp)\s([\w\s]+\w)/i, /(asus)-?(\w+)/i], [m, p, [u, h]], [/\(bb10;\s(\w+)/i], [p, [m, "BlackBerry"], [u, h]], [/android.+(transfo[prime\s]{4,10}\s\w+|eeepc|slider\s\w+|nexus 7)/i], [p, [m, "Asus"], [u, v]], [/(sony)\s(tablet\s[ps])\sbuild\//i, /(sony)?(?:sgp.+)\sbuild\//i], [[m, "Sony"], [p, "Xperia Tablet"], [u, v]], [/(?:sony)?(?:(?:(?:c|d)\d{4})|(?:so[-l].+))\sbuild\//i], [[m, "Sony"], [p, "Xperia Phone"], [u, h]], [/\s(ouya)\s/i, /(nintendo)\s([wids3u]+)/i], [m, p, [u, g]], [/android.+;\s(shield)\sbuild/i], [p, [m, "Nvidia"], [u, g]], [/(playstation\s[3portablevi]+)/i], [p, [m, "Sony"], [u, g]], [/(sprint\s(\w+))/i], [[m, z.str, I.device.sprint.vendor], [p, z.str, I.device.sprint.model], [u, h]], [/(lenovo)\s?(S(?:5000|6000)+(?:[-][\w+]))/i], [m, p, [u, v]], [/(htc)[;_\s-]+([\w\s]+(?=\))|\w+)*/i, /(zte)-(\w+)*/i, /(alcatel|geeksphone|huawei|lenovo|nexian|panasonic|(?=;\s)sony)[_\s-]?([\w-]+)*/i], [m, [p, /_/g, " "], [u, h]], [/(nexus\s9)/i], [p, [m, "HTC"], [u, v]], [/[\s\(;](xbox(?:\sone)?)[\s\);]/i], [p, [m, "Microsoft"], [u, g]], [/(kin\.[onetw]{3})/i], [[p, /\./g, " "], [m, "Microsoft"], [u, h]], [/\s(milestone|droid(?:[2-4x]|\s(?:bionic|x2|pro|razr))?(:?\s4g)?)[\w\s]+build\//i, /mot[\s-]?(\w+)*/i, /(XT\d{3,4}) build\//i], [p, [m, "Motorola"], [u, h]], [/android.+\s(mz60\d|xoom[\s2]{0,2})\sbuild\//i], [p, [m, "Motorola"], [u, v]], [/android.+((sch-i[89]0\d|shw-m380s|gt-p\d{4}|gt-n8000|sgh-t8[56]9|nexus 10))/i, /((SM-T\w+))/i], [[m, "Samsung"], p, [u, v]], [/((s[cgp]h-\w+|gt-\w+|galaxy\snexus|sm-n900))/i, /(sam[sung]*)[\s-]*(\w+-?[\w-]*)*/i, /sec-((sgh\w+))/i], [[m, "Samsung"], p, [u, h]], [/(samsung);smarttv/i], [m, p, [u, w]], [/\(dtv[\);].+(aquos)/i], [p, [m, "Sharp"], [u, w]], [/sie-(\w+)*/i], [p, [m, "Siemens"], [u, h]], [/(maemo|nokia).*(n900|lumia\s\d+)/i, /(nokia)[\s_-]?([\w-]+)*/i], [[m, "Nokia"], p, [u, h]], [/android\s3\.[\s\w;-]{10}(a\d{3})/i], [p, [m, "Acer"], [u, v]], [/android\s3\.[\s\w;-]{10}(lg?)-([06cv9]{3,4})/i], [[m, "LG"], p, [u, v]], [/(lg) netcast\.tv/i], [m, p, [u, w]], [/(nexus\s[45])/i, /lg[e;\s\/-]+(\w+)*/i], [p, [m, "LG"], [u, h]], [/android.+(ideatab[a-z0-9\-\s]+)/i], [p, [m, "Lenovo"], [u, v]], [/linux;.+((jolla));/i], [m, p, [u, h]], [/((pebble))app\/[\d\.]+\s/i], [m, p, [u, y]], [/android.+;\s(glass)\s\d/i], [p, [m, "Google"], [u, y]], [/android.+(\w+)\s+build\/hm\1/i, /android.+(hm[\s\-_]*note?[\s_]*(?:\d\w)?)\s+build/i, /android.+(mi[\s\-_]*(?:one|one[\s_]plus)?[\s_]*(?:\d\w)?)\s+build/i], [[p, /_/g, " "], [m, "Xiaomi"], [u, h]], [/(mobile|tablet);.+rv\:.+gecko\//i], [[u, B.lowerize], m, p]], engine: [[/windows.+\sedge\/([\w\.]+)/i], [b, [d, "EdgeHTML"]], [/(presto)\/([\w\.]+)/i, /(webkit|trident|netfront|netsurf|amaya|lynx|w3m)\/([\w\.]+)/i, /(khtml|tasman|links)[\/\s]\(?([\w\.]+)/i, /(icab)[\/\s]([23]\.[\d\.]+)/i], [d, b], [/rv\:([\w\.]+).*(gecko)/i], [b, d]], os: [[/microsoft\s(windows)\s(vista|xp)/i], [d, b], [/(windows)\snt\s6\.2;\s(arm)/i, /(windows\sphone(?:\sos)*|windows\smobile|windows)[\s\/]?([ntce\d\.\s]+\w)/i], [d, [b, z.str, I.os.windows.version]], [/(win(?=3|9|n)|win\s9x\s)([nt\d\.]+)/i], [[d, "Windows"], [b, z.str, I.os.windows.version]], [/\((bb)(10);/i], [[d, "BlackBerry"], b], [/(blackberry)\w*\/?([\w\.]+)*/i, /(tizen)[\/\s]([\w\.]+)/i, /(android|webos|palm\sos|qnx|bada|rim\stablet\sos|meego|contiki)[\/\s-]?([\w\.]+)*/i, /linux;.+(sailfish);/i], [d, b], [/(symbian\s?os|symbos|s60(?=;))[\/\s-]?([\w\.]+)*/i], [[d, "Symbian"], b], [/\((series40);/i], [d], [/mozilla.+\(mobile;.+gecko.+firefox/i], [[d, "Firefox OS"], b], [/(nintendo|playstation)\s([wids3portablevu]+)/i, /(mint)[\/\s\(]?(\w+)*/i, /(mageia|vectorlinux)[;\s]/i, /(joli|[kxln]?ubuntu|debian|[open]*suse|gentoo|arch|slackware|fedora|mandriva|centos|pclinuxos|redhat|zenwalk|linpus)[\/\s-]?([\w\.-]+)*/i, /(hurd|linux)\s?([\w\.]+)*/i, /(gnu)\s?([\w\.]+)*/i], [d, b], [/(cros)\s[\w]+\s([\w\.]+\w)/i], [[d, "Chromium OS"], b], [/(sunos)\s?([\w\.]+\d)*/i], [[d, "Solaris"], b], [/\s([frentopc-]{0,4}bsd|dragonfly)\s?([\w\.]+)*/i], [d, b], [/(ip[honead]+)(?:.*os\s*([\w]+)*\slike\smac|;\sopera)/i], [[d, "iOS"], [b, /_/g, "."]], [/(mac\sos\sx)\s?([\w\s\.]+\w)*/i, /(macintosh|mac(?=_powerpc)\s)/i], [[d, "Mac OS"], [b, /_/g, "."]], [/((?:open)?solaris)[\/\s-]?([\w\.]+)*/i, /(haiku)\s(\w+)/i, /(aix)\s((\d)(?=\.|\)|\s)[\w\.]*)*/i, /(plan\s9|minix|beos|os\/2|amigaos|morphos|risc\sos|openvms)/i, /(unix)\s?([\w\.]+)*/i], [d, b]] }, D = function (n, e) { if (!(this instanceof D)) return new D(n, e).getResult(); var a = n || (t && t.navigator && t.navigator.userAgent ? t.navigator.userAgent : i), o = e ? B.extend(C, e) : C; return this.getBrowser = function () { var t = z.rgx.apply(this, o.browser); return t.major = B.major(t.version), t }, this.getCPU = function () { return z.rgx.apply(this, o.cpu) }, this.getDevice = function () { return z.rgx.apply(this, o.device) }, this.getEngine = function () { return z.rgx.apply(this, o.engine) }, this.getOS = function () { return z.rgx.apply(this, o.os) }, this.getResult = function () { return { ua: this.getUA(), browser: this.getBrowser(), engine: this.getEngine(), os: this.getOS(), device: this.getDevice(), cpu: this.getCPU() } }, this.getUA = function () { return a }, this.setUA = function (t) { return a = t, this }, this.setUA(a), this }; D.VERSION = e, D.BROWSER = { NAME: d, MAJOR: l, VERSION: b }, D.CPU = { ARCHITECTURE: f }, D.DEVICE = { MODEL: p, VENDOR: m, TYPE: u, CONSOLE: g, MOBILE: h, SMARTTV: w, TABLET: v, WEARABLE: y, EMBEDDED: S }, D.ENGINE = { NAME: d, VERSION: b }, D.OS = { NAME: d, VERSION: b }, typeof exports !== r ? (typeof module !== r && module.exports && (exports = module.exports = D), exports.UAParser = D) : t.UAParser = D; var x = t.jQuery || t.Zepto; if (typeof x !== r) { var T = new D; x.ua = T.getResult(), x.ua.get = function () { return T.getUA() }, x.ua.set = function (t) { T.setUA(t); var n = T.getResult(); for (var e in n) x.ua[e] = n[e] } } }("object" == typeof window ? window : this), function (t) {
        t.fn.StartButton = function (n) {
            function e() { try { var t = new UAParser, n = t.getResult(); if (n && n.device && n.os) { if (n.ua_os_name = n.os.name ? n.os.name.toLowerCase() : "android", n.device.type) n.ua_device_type = n.device.type.toLowerCase(); else switch (n.ua_os_name) { case "android": n.ua_device_type = "mobile"; break; case "ios": n.ua_device_type = "mobile"; break; case "windows phone": n.ua_device_type = "mobile"; break; case "windows mobile": n.ua_device_type = "mobile"; break; default: n.ua_device_type = "console" } a.parsed_ua = n, a.params.Debug && console.log(a.parsed_ua) } } catch (e) { a.params.Debug && console.log(e) } i() } function i() {
                if (a.userData.browserMajorVersion > "8" || "Microsoft Internet Explorer" !== a.userData.browser) {
                    a.params = t.extend(!0, { VideoType: "mp4", DisableButtonMove: !1, waitForIframeButtonLoaded: !0, uaParserPath: "//cdn.probtn.com/libs/ua-parser.js", ButtonImageType: "image", ButtonIframeInitialSize: { W: 0, H: 0 }, ClickOnCloseButton: !0, AlwaysShowCloseButton: !1, FullscreenClickLink: "", UtmSourceUseOnlyDomain: !1, UtmCampaign: "", isTestSpeed: !1, HideWithoutInteractionTime: 0, cssEaseDuration: 300, ControlInIframeFromParent: !1, ParentParams: { width: 0, height: 0 }, isAddUtmSource: !1, UtmSource: "", ButtonInitDelay: 0, MenuOptions: { FontSize: "1.4em", FontFamily: '"Helvetica Neue",Helvetica,Arial,"Lucida Grande",sans-serif', BackgroundColor: "rgba(49,55,61,.95)", ForegroundColor: "#fff", MenuHeight: "3.4em" }, MenuItems: [{ Name: "Menu1", Text: "External1", ActionURL: "http://yandex.ru", Image: "//admin.probtn.com/eqwid_btn_nonpress.png", Type: "external" }, { Name: "Menu2", Text: "External2", ActionURL: "http://yandex.ru", Image: "", Type: "external" }, { Name: "Menu3", Text: "Iframe", ActionURL: "http://probtn.com", Image: "//admin.probtn.com/eqwid_btn_nonpress.png", Type: "iframe" }, { Name: "Menu3", Text: "Video", ActionURL: "http://jaguar-atlantm.by/upload/attachments/2/1/2115cee1a53649bb92b3b660e535e173.mp4", Image: "//admin.probtn.com/eqwid_btn_nonpress.png", Type: "video" }], ScrollZones: [{ ZoneHeight: .5, ButtonImage: "//cdnjs.cloudflare.com/ajax/libs/probtn/1.0.0/images/probtn/gray.png", ButtonDragImage: "", HintText: "", TrackingLink: "", CustomButtonParams: !1, CustomContentURL: "", ButtonSize: { W: 64, H: 64 }, ButtonDragSize: { W: 68, H: 68 }, ButtonOpacity: .8, ButtonDragOpacity: 1 }, { ZoneHeight: .5, ButtonImage: "//cdnjs.cloudflare.com/ajax/libs/probtn/1.0.0/images/probtn/gray.png", ButtonDragImage: "", HintText: "", TrackingLink: "", CustomButtonParams: !1, ButtonSize: { W: 64, H: 64 }, ButtonDragSize: { W: 68, H: 68 }, ButtonOpacity: .8, ButtonDragOpacity: 1 }], ChangeScrollButtonAtFullSiteHeight: !0, MainButtonClickable: !0, ActiveZones: [{ Name: "Area1", ButtonContentType: "iframe", ButtonImageType: "image", Position: { X: .5, Y: .5 }, ActiveImage: "//admin.probtn.com/eqwid_btn_nonpress.png", InactiveImage: "//admin.probtn.com/eqwid_btn_nonpress.png", ActiveSize: { W: 64, H: 64 }, InactiveSize: { W: 64, H: 64 }, ActionURL: "https://admin.probtn.com/probtn_demo_page.html", ClickCounterLink: "", VisibleOnlyInteraction: !0, InactiveOpacity: .8, ActiveOpacity: 1 }], hpmd: void 0, isServerCommunicationEnabled: !0, localSettingsPath: "settings.json", useLocalFileSettings: !1, ClickCounterLink: "", isSmartBanner: !1, smartbannerJsPath: "//cdn.probtn.com/libs/jquery.smartbanner.js", smartbannerCssPath: "//cdn.probtn.com/libs/jquery.smartbanner.css", animationDuration: 5e3, isAnimation: "", ButtonAnimationDoneImage: "", smartbanner: { iosAppId: null, androidAppId: null, isFixed: !1, isFixedMode: "default", title: null, author: null, price: "FREE", appStoreLanguage: "us", inAppStore: "On the App Store", inGooglePlay: "In Google Play", inAmazonAppStore: "In the Amazon Appstore", inWindowsStore: "In the Windows Store", GooglePlayParams: null, icon: null, iconGloss: null, url: null, button: "VIEW", scale: "auto", speedIn: 300, speedOut: 400, daysHidden: 0, daysReminder: 0, force: null, hideOnInstall: !0, layer: !1, iOSUniversalApp: !0, appendToSelector: "body" }, dfp: { isDFP: !1, clickUrlEsc: "", cacheBuster: "" }, showInParent: !1, isHPMD: !1, iframeScaleMinWidth: 0, iframeScale: 1, iframeScaleMobile: 1, iframeScaleTablet: 1, iframeScaleDesktop: 1, Debug: !1, VideoPoster: "", ButtonOnClick: 'function start1() { console.log("start1"); try { if (window.probtn_ButtonContentType!==null) { if (window.probtn_ButtonContentType=="video") { if (window.probtn_dropedActiveZone!==null) { if (window.probtn_dropedActiveZone.currentActiveZone.ButtonContentType=="video") { var video = jQuery("#video_probtn_"+window.probtn_dropedActiveZone.currentActiveZone.Name).get(0); video.play(); } } else { var video = jQuery("#video_probtn").get(0); var frame_id = jQuery(".fancybox-iframe").first().attr("id"); probtn_callPlayer("video_probtn", "playVideo"); video.play(); } } } } catch(ex) { } }; start1(); setTimeout(start1 , 1000); setTimeout(start1 , 2000);', ButtonOnTouchEnd: 'console.log("window.probtn_pizzabtn_moved - " + window.probtn_pizzabtn_moved); var moved =  window.probtn_pizzabtn_moved; clearInterval(window.probtn_touch_interval); function start2() { try { if ((window.probtn_dropedActiveZone!==null) && (window.probtn_dropedActiveZone!==undefined)) { if (window.probtn_dropedActiveZone.currentActiveZone.ButtonContentType=="video") { var videoZone = jQuery("#video_probtn_"+window.probtn_dropedActiveZone.currentActiveZone.Name).get(0); videoZone.play(); } } else { if (moved === false) { try { if (window.probtn_ButtonContentType!==null) { if (window.probtn_ButtonContentType=="video") { var video = jQuery("#video_probtn").get(0); var frame_id = jQuery(".fancybox-iframe").first().attr("id"); probtn_callPlayer("video_probtn", "playVideo"); video.play(); } } } catch(ex) { console.log(ex); } } } } catch(ex) { console.log(ex); } }; start2(); setTimeout(start2 , 1000); setTimeout(start2 , 2000); setTimeout(start2 , 3000);', ButtonOnTouchStart: "window.probtn_touch_start = 0; window.probtn_touch_interval = setInterval(function() { window.probtn_touch_start = window.probtn_touch_start + 1; }, 1);", ButtonType: "fancybox", VideoSize: { X: 1920, Y: 1080 }, VideoClickURL: "", ButtonContentType: "iframe", FancyboxType: "iframe", TrackingLink: null, MinimizeWrapperTime: 600, OpenExternal: !1, CampaignID: null, NeverClose: !0, MaxHeight: 0, MaxWidth: 0, domain: "", fancyboxJsPath: "//cdn.probtn.com/libs/jquery.fancybox.min.js", fancyboxCssPath: "//cdn.probtn.com/libs/jquery.fancybox.min.css", mainStyleCss: "//cdn.probtn.com/style.css", jqueryPepPath: "//cdn.probtn.com/libs/jquery.pep.min.js", buttonAnimationTimeAfterFancybox: 40, HideAfterFirstShow: !1, LoadFancyboxCSS: !0, ContentURL: "http://app.ecwid.com/jsp/2557212/m", BaseInsets: { T: 4, B: 4, L: 4, R: 4 }, ButtonEnabled: !1, ButtonVisible: !1, ButtonOpenInsets: { T: 32, B: 32, L: 32, R: 32 }, ButtonPosition: { X: .85, Y: .15 }, ButtonSize: { W: 64, H: 64 }, ButtonDragSize: { W: 68, H: 68 }, ButtonOpenSize: { W: 64, H: 64 }, ButtonInactiveSize: { W: 64, H: 64 }, ButtonOpacity: .8, ButtonDragOpacity: 1, ButtonOpenOpacity: 1, ButtonInactiveOpacity: .5, ButtonImage: "//cdnjs.cloudflare.com/ajax/libs/probtn/1.0.0/images/probtn/gray.png", ButtonDragImage: "//cdnjs.cloudflare.com/ajax/libs/probtn/1.0.0/images/probtn/drag_gray.png", ButtonOpenImage: "//cdnjs.cloudflare.com/ajax/libs/probtn/1.0.0/images/probtn/drag_gray.png", ButtonInactiveImage: "//cdnjs.cloudflare.com/ajax/libs/probtn/1.0.0/images/probtn/drag_gray.png", ClosePosition: { X: .5, Y: .85 }, CloseSize: { W: 64, H: 64 }, CloseActiveSize: { W: 72, H: 72 }, CloseOpacity: .6, CloseActiveOpacity: 1, CloseImage: "//cdnjs.cloudflare.com/ajax/libs/probtn/1.0.0/images/probtn/close.png", CloseActiveImage: "//cdnjs.cloudflare.com/ajax/libs/probtn/1.0.0/images/probtn/close.png", HintInsets: { T: 4, B: 4, L: 4, R: 4 }, HintLabelInsets: { T: 4, B: 4, L: 4, R: 4 }, HintImageInsets: { T: 8, B: 8, L: 8, R: 8 }, HintText: "Press me", HintFont: { Family: "Arial", Size: 18 }, HintFontColor: { R: 1, G: 1, B: 1, A: 1 }, VendorText: "", VendorSite: "#", VendorTextFont: { Family: "Arial", Size: 10 }, VendorTextColor: { R: 1, G: 1, B: 1, A: 1 }, VendorOpacity: .4, VendorColor: { R: 0, G: 0, B: 0, A: 1 }, HintOpacity: .8, HintImage: "//cdnjs.cloudflare.com/ajax/libs/probtn/1.0.0/images/probtn/hint.png", HintArrowSize: { W: 8, H: 8 }, HintArrowOffset: { T: 0, B: 0, L: 0, R: 0 }, HintArrowImageT: "", HintArrowImageB: "", HintArrowImageL: "", HintArrowImageR: "", ContentSize: { W: 100, H: 100, X: "90%", Y: "90%" }, IsManualSize: !0, ContentInsets: { T: -2, B: -2, L: -2, R: -2 }, ContentWebViewInsets: { T: 12, B: 12, L: 12, R: 12 }, ContentImageInsets: { T: 32, B: 32, L: 32, R: 32 }, ContentOpacity: 1, ContentBackOpacity: 1, ContentBackColor: { R: 0, G: 0, B: 0, A: 1 }, ContentActivityColor: { R: 0, G: 0, B: 0, A: 1 }, ContentImage: "", ContentArrowSize: { W: 14, H: 14 }, ContentArrowOffset: { T: 8, B: 8, L: 9, R: 9 }, ContentArrowImageT: "", ContentArrowImageB: "", ContentArrowImageL: "", ContentArrowImageR: "", DefaultDuration: .1, DefaultDelay: 0, OpenDuration: .2, OpenDelay: .5, CloseDuration: .2, CloseDelay: .5, ButtonShowDuration: .2, ButtonShowDelay: 0, ButtonHideDuration: .2, ButtonHideDelay: 0, ButtonDragDuration: .1, ButtonDragDelay: 0, ButtonUndragDuration: .2, ButtonUndragDelay: 0, ButtonInactiveDuration: .1, ButtonInactiveDelay: 5, ButtonInertiaSpeed: 512, ButtonInertiaSpeedMin: 32, ButtonInertiaSpeedMax: 1024, ButtonInertiaFactor: 6, CloseShowDuration: .1, CloseShowDelay: 0, CloseHideDuration: .2, CloseHideDelay: 0, CloseActiveDuration: .1, CloseActiveDelay: 0, CloseUnactiveDuration: .1, CloseUnactiveDelay: 0, HintLaunchDuration: 3e4, HintLaunchDelay: 0, HintShowDuration: .1, HintShowDelay: 0, HintHideDuration: .2, HintHideDelay: 0, ContentShowDuration: .1, ContentShowDelay: 0, ContentHideDuration: .2, ContentHideDelay: 0, HideInFrame: !0, ZCustomCss: "" }, n), a.initFunctions.hintTextStyle = { opacity: a.params.HintOpacity, "font-size": a.params.HintFont.Size, "font-family": a.params.HintFont.Family, color: "white", padding: "4px", background: "url('" + a.params.HintImage + "')" }, ("" == a.params.HintText || null == a.params.HintText) && (a.initFunctions.hintTextStyle.display = "none", a.initFunctions.hintTextStyle.opacity = "0.0"), a.closeButton = void 0, a.currentDomain = document.domain.replace("www.", ""), ("" == a.currentDomain || null == a.currentDomain) && (a.currentDomain = "example.com"), "" != a.params.domain && null != a.params.domain && (a.currentDomain = a.params.domain); { "onorientationchange" in window, window.innerHeight, window.innerWidth } a.additionalButtonFunctions.closeAfterOrientationChange = !1; var e = "", i = function () { if (a.params.showInParent && window.self !== window.top) { a.params.showInParent = !1, a.params.HideInFrame = !0; var t = (window.top.document.getElementsByTagName("HEAD").item(0), function (t, n) { var e = window.top.document.createElement("script"); e.src = t, e.async = !0, e.onreadystatechange = e.onload = function () { var t = e.readyState; n.done || t && !/loaded|complete/.test(t) || (n.done = !0, n()) }, window.top.document.getElementsByTagName("head")[0].appendChild(e) }); t("//cdn.probtn.com/includepb.min.js", function () { }) } }, o = function () { if ("smartbanner" == a.params.ButtonType || 1 == a.params.IsSmartBanner) { "" !== a.params.ZCustomCss && null !== a.params.ZCustomCss && void 0 !== a.params.ZCustomCss && t("head").append('<style type="text/css">' + a.params.ZCustomCss + "</style>"); var n = function () { a.params.Debug && console.log(a.params.smartbanner), a.statistics.SendStatObject({ Opened: 1, Showed: 1 }); try { try { a.params.smartbanner.androidAppId && "" != a.params.smartbanner.androidAppId || t("meta[name=apple-itunes-app]").length || t("head").append('<meta name="apple-itunes-app" content="app-id=' + a.params.smartbanner.iosAppId + '" />'), a.params.smartbanner.androidAppId && "" != a.params.smartbanner.androidAppId || t("meta[name=google-play-app]").length || t("head").append('<meta name="google-play-app" content="app-id=' + a.params.smartbanner.androidAppId + '" />') } catch (n) { a.params.Debug && console.log(n) } "extrusion" == a.params.smartbanner.isFixedMode && (a.params.smartbanner.appendToSelector = "html"), t.smartbanner(a.params.smartbanner), a.params.Debug && console.log(a.params.smartbanner.isFixed), 1 == a.params.smartbanner.isFixed && t("#smartbanner").css("position", "fixed"), t("#smartbanner .sb-info").append('<div style="margin-left: -1px;" class="rating"><span>★</span><span>★</span><span>★</span><span>★</span><span>★</span></div>'), "extrusion" == a.params.smartbanner.isFixedMode && (a.params.Debug && console.log("extrusion"), t("#smartbanner").css("position", "fixed"), t("body").css("top", "78px"), t("body").css("margin", "0px"), t("body").css("position", "absolute"), t("body").css("width", "100%")); try { t("#smartbanner .sb-button").attr("target", "_blank") } catch (e) { a.params.Debug && console.log(e) } try { t(document).on("click", "#smartbanner .sb-button", function () { a.params.Debug && console.log("smartbanner click"), a.statistics.SendStatisticsData("ContentShowed", 1) }) } catch (e) { a.params.Debug && console.log(e) } try { t(document).on("click", "#smartbanner a.sb-close", function () { a.params.Debug && console.log("smartbanner close"), a.statistics.SendStatObject({ Closed: 1, Hidded: 1 }), "extrusion" == a.params.smartbanner.isFixedMode && t("body").css("top", "0px"), t("#smartbanner").hide(300) }) } catch (e) { a.params.Debug && console.log(e) } } catch (e) { a.params.Debug && console.log(e) } }; return "function" == typeof t.smartbanner ? (n(), !0) : (t("head").append('<link rel="stylesheet" href="' + a.params.smartbannerCssPath + '" type="text/css" />'), t.getScript(a.params.smartbannerJsPath, function () { n() }), !0) } return !1 }, r = function () { var n = o(); i(), a.params.ButtonSize = a.additionalButtonFunctions.convertPercentButtonSize(a.params.ButtonSize), a.params.ButtonDragSize = a.additionalButtonFunctions.convertPercentButtonSize(a.params.ButtonDragSize), a.params.HideInFrame === !0 && window.self !== window.top || n ? a.params.Debug && console.log("do nothing") : 1 == a.params.ButtonEnabled && (a.params.LoadFancyboxCSS === !0 && t("head").append('<link rel="stylesheet" href="' + a.params.fancyboxCssPath + '" type="text/css" />'), "" !== a.params.ZCustomCss && null !== a.params.ZCustomCss && void 0 !== a.params.ZCustomCss && t("head").append('<style type="text/css">' + a.params.ZCustomCss + "</style>"), a.closeButton = a.initFunctions.initCloseButton(), t(window).bind("orientationchange", a.additionalButtonFunctions.onOrientationChange), t(window).bind("resize", a.additionalButtonFunctions.onOrientationChange), 0 !== a.params.ButtonInitDelay && null !== a.params.ButtonInitDelay && void 0 !== a.params.ButtonInitDelay ? setTimeout(c, a.params.ButtonInitDelay) : c()) }, s = function () { function i(e) { a.params.Debug && console.log(e); try { a.params.Debug && console.log(e); try { e.result.HintText = HintText } catch (i) { } if (100 == e.code) 1 == e.MSMediaKeyNeededEvent.location && a.geolocation.getLocation(); else { a.params.Debug && console.log(a.params), a.params.Debug && console.log(n), a.params = t.extend(!0, a.params, e.result), a.params.Debug && console.log("after server", a.params), a.params = t.extend(!0, a.params, n), a.params.Debug && console.log("after options", a.params), a.params.ButtonSize = a.additionalButtonFunctions.convertPercentButtonSize(a.params.ButtonSize), a.params.Debug && console.log(a.params.ButtonSize), a.params.ButtonDragSize = a.additionalButtonFunctions.convertPercentButtonSize(a.params.ButtonDragSize), a.params.Debug && console.log(a.params.ButtonDragSize); try { if (t("#probtn_additional_params").length > 0) { var o = t("#probtn_additional_params").text(); o = JSON.parse(o), t.extend(!0, a.params, a.params, o) } } catch (i) { a.params.Debug && console.log(i) } var r = function (t) { try { for (var n in t) if (t.hasOwnProperty(n) && "string" == typeof t[n]) try { { t[n] } t[n] = t[n].split("<style>").join("").split("</style>").join("").split("<script>").join("").split("</script>").join("") } catch (e) { a.params.Debug && console.log(e) } } catch (e) { a.params.Debug && console.log(e) } }; r(a.params), "#probtnDebug" == window.location.hash && (a.params.ButtonVisible = !0, a.params.ButtonEnabled = !0, a.params.Debug = !0), a.initFunctions.hintTextStyle = { opacity: a.params.HintOpacity, "font-size": a.params.HintFont.Size, "font-family": a.params.HintFont.Family, color: "rgb(" + 100 * a.params.HintFontColor.R + "%, " + 100 * a.params.HintFontColor.G + "%, " + 100 * a.params.HintFontColor.B + "%)", "padding-left": a.params.HintLabelInsets.L, "padding-top": a.params.HintLabelInsets.T, "padding-right": a.params.HintLabelInsets.R, "padding-bottom": a.params.HintLabelInsets.B, background: "url('" + a.params.HintImage + "')" }, ("" == a.params.HintText || null == a.params.HintText) && (a.initFunctions.hintTextStyle.display = "none", a.initFunctions.hintTextStyle.opacity = "0.0") } } catch (i) { a.params.Debug && console.log(i) } } a.params.Debug && console.log("getSettingsAndLaunchButton"); var o = 1; ("iOS" === a.userData.os || "Mac OS" === a.userData.os || "Mac OS X" === a.userData.os) && (o = window.devicePixelRatio), a.params.isServerCommunicationEnabled || a.params.useLocalFileSettings ? a.additionalButtonFunctions.testSpeed(function (n) { a.params.Debug && n > 0; try { if (t("#probtn_additional_params").length > 0) { var s = t("#probtn_additional_params").text(); s = JSON.parse(s), t.extend(!0, a.params, a.params, s), "" !== a.params.domain && (a.currentDomain = a.params.domain) } } catch (c) { a.params.Debug && console.log(c) } e = a.serverUrl + "/1/functions/getClientSettings?BundleID=" + a.currentDomain + "&localDomain=" + a.realDomain + "&DeviceType=web&DeviceUID=" + a.GetDeviceUID() + "&DeviceCUID=" + a.DeviceCID + "&Location[Longitude]=0&Location[Latitude]=0&Version=" + a.mainVersion + "&X-ProBtn-Token=" + a.XProBtnToken + "&random=" + Math.random() + "&ScreenResolutionX=" + a.userData.screenHeight + "&ScreenResolutionY=" + a.userData.screenWidth + "&Retina=" + o + "&ConnectionSpeed=" + n + "&callback=?", a.params.useLocalFileSettings && (e = a.params.localSettingsPath); try { t.getJSON(e, i).done(function () { a.params.Debug && console.log("done settings load") }).fail(function (t, n, e) { a.params.Debug && console.log(e), a.params.Debug && console.log(n) }).always(r) } catch (c) { t.getJSON(e, function (t) { i(t), r() }) } }) : a.params.Debug && console.log("Dont load settings") }; a.cookieFunctions.getDeviceCID(function () { s(null) }); var c = function () {
                        function n(t) { try { a.params.ParentParams.width = t.data.width, a.params.ParentParams.height = t.data.height, a.params.Debug && console.log(a.params.ParentParams) } catch (n) { a.params.Debug && console.log(n) } } function e() { try { "function" == typeof t.pep.toggleAll ? i() : t.getScript(a.params.jqueryPepPath, i) } catch (n) { t.getScript(a.params.jqueryPepPath, i) } } function i() {
                            a.statistics.SendStatisticsData(), a.statistics.SendBrowserStatsInfo(), a.params.ButtonEnabled && a.params.ButtonVisible && (a.pizzabtn.show(), a.closeButton.center(), 1 == a.params.AlwaysShowCloseButton && t("head").append('<style type="text/css">#probtn_closeButton { display: block !important; }</style>')), "fullscreen_fancybox" == a.params.ButtonType && (a.statistics.SendStatisticsData("Showed", 1), a.onButtonTap()), "fullscreen" == a.params.ButtonType && a.initFunctions.fullscreenInitAndShow(), a.params.ButtonVisible && a.statistics.SendStatisticsData("Showed", 1), a.pizzabtn.hideHintDelay(), a.pizzabtn.showHint(), a.overlaped = !1, window.probtn_pizzabtn_moved = !1, a.pizzabtn.moved = !1; var n = a.params.cssEaseDuration; 1 == a.params.ControlInIframeFromParent && (n = 0), a.pizzabtn.pep({
                                useCSSTranslation: !1, constrainTo: "parent", cssEaseString: "cubic-bezier(0, .50, .50, 1)", cssEaseDuration: n, velocityMultiplier: 1, startThreshold: [1, 1], droppable: ".probtn_active_zone", initiate: a.additionalButtonFunctions.changeBodySize, start: function () { a.interactionFunctions.wasInteraction = !0, window.probtn_button_tap = !1, a.initFunctions.initRemoveMenu(), window.probtn_dropedActiveZone = null, a.initFunctions.initScrollChange(!0), a.additionalButtonFunctions.animation.animationRuning && a.additionalButtonFunctions.animation.doneAnimation(), t.each(a.initializedActiveZones, function (t, n) { n.currentActiveZone.VisibleOnlyInteraction && n.show() }), a.additionalButtonFunctions.MaximizeWrapper(function () { if (0 == a.pizzabtn.moved && a.pizzabtn.dragAnimate(), window.probtn_pizzabtn_moved = !0, a.pizzabtn.moved = !0, a.pizzabtn.hintTextActive && a.pizzabtn.hideHint(), 0 == a.params.NeverClose) try { a.closeButton.show() } catch (t) { } a.statistics.SendStatisticsData("Moved", 1) }) }, drag: function () { if (a.initFunctions.initScrollChange(!0), a.params.DisableButtonMove === !0) return !1; a.additionalButtonFunctions.MaximizeWrapper(function () { var t = a.pizzabtn[0].getBoundingClientRect(), n = a.closeButton[0].getBoundingClientRect(); t.top + t.height > window.innerHeight; var e = !(t.right < n.left || t.left > n.right || t.bottom < n.top || t.top > n.bottom); if (e && 0 !== n.width) a.overlaped || (a.closeButton.overlayActive(), a.overlaped = !0); else if (a.overlaped) try { a.closeButton.overlayUnactive(), a.overlaped = !1 } catch (i) { a.params.Debug && console.log(i) } }); try { if (this.activeDropRegions.length > 0) { var n = jQuery(this.activeDropRegions[0]).attr("rel"), e = a.initializedActiveZones[n]; null !== e && void 0 !== e && (e.animateActive(), window.probtn_dropedActiveZone = e) } else window.probtn_dropedActiveZone = null, t.each(a.initializedActiveZones, function (t, n) { "iframe" !== n.currentActiveZone.ButtonImageType && n.attr("src", n.currentActiveZone.InactiveImage), (null == n.currentActiveZone.ButtonIframeInitialSize || void 0 == n.currentActiveZone.ButtonIframeInitialSize) && (n.currentActiveZone.ButtonIframeInitialSize = { W: 0, H: 0 }), a.additionalButtonFunctions.checkExistInitIframeSIze(n) ? n.css({ opacity: n.currentActiveZone.InactiveOpacity }) : (n.currentActiveZone.InactiveSize = a.additionalButtonFunctions.convertPercentButtonSize(n.currentActiveZone.InactiveSize), n.css({ width: n.currentActiveZone.InactiveSize.W, height: n.currentActiveZone.InactiveSize.H, opacity: n.currentActiveZone.InactiveOpacity })) }) } catch (i) { console.log(i) } }, stop: function () {
                                    var n = null; if (this.activeDropRegions.length > 0) try { var e = jQuery(this.activeDropRegions[0]).attr("rel"); a.params.Debug && console.log(e), n = a.initializedActiveZones[e], window.probtn_dropedActiveZone = n, null !== n.requestClickCounterLink && null !== n.requestClickCounterLink && n.requestClickCounterLink(), "video" !== n.currentActiveZone.ButtonContentType ? a.onButtonTap(n.currentActiveZone.ActionURL, e, n.currentActiveZone.ButtonContentType) : (a.params.Debug && console.log("ProBtnControl.userData.isiPad - " + a.userData.isiPad), "iOS" !== a.userData.os || a.userData.isiPad !== !1 ? a.onButtonTap(n.currentActiveZone.ActionURL, e, n.currentActiveZone.ButtonContentType) : "" !== a.params.VideoClickURL) } catch (i) { a.params.Debug && console.log(i), window.probtn_dropedActiveZone = null } else window.probtn_dropedActiveZone = null; t.each(a.initializedActiveZones, function (t, n) {
                                        n.currentActiveZone.VisibleOnlyInteraction && ("iframe" !== n.currentActiveZone.ButtonImageType && n.attr("src", n.currentActiveZone.InactiveImage), (null == n.currentActiveZone.ButtonIframeInitialSize || void 0 == n.currentActiveZone.ButtonIframeInitialSize) && (n.currentActiveZone.ButtonIframeInitialSize = { W: 0, H: 0 }), n.css(a.additionalButtonFunctions.checkExistInitIframeSIze(n) ? { opacity: n.currentActiveZone.InactiveOpacity } : { width: n.currentActiveZone.InactiveSize.W, height: n.currentActiveZone.InactiveSize.H, opacity: n.currentActiveZone.InactiveOpacity }), n.hide())
                                    }), a.pizzabtn.moved ? (a.additionalButtonFunctions.MinimizeWrapper(), a.overlaped ? (a.statistics.SendStatObject({ Closed: 1, Hidded: 1 }), a.pizzabtn.hide(), a.closeButton.remove(), a.additionalButtonFunctions.hideAllActiveZones()) : a.pizzabtn.undragAnimate()) : a.additionalButtonFunctions.MaximizeWrapper(function () { (null === n || void 0 === n) && ("video" !== a.params.ButtonContentType ? a.onButtonTap() : "iOS" !== a.userData.os || a.userData.isiPad ? a.onButtonTap() : (1 == a.params.HideAfterFirstShow && a.additionalButtonFunctions.hideAll(), "" !== a.params.VideoClickURL && null !== a.params.VideoClickURL && void 0 !== a.params.VideoClickURL && setTimeout(function () { a.statistics.SendStatisticsData("VideoClicked", 1), a.onButtonTap(a.params.VideoClickURL, null, "iframe") }, 3e3))) }), a.closeButton.hide(), a.pizzabtn.moved = !1, window.probtn_pizzabtn_moved = !1, a.overlaped = !1
                                }
                            })
                        } try { } catch (o) { console.log(o) } if (window.addEventListener ? window.addEventListener("message", n, !1) : window.attachEvent("onmessage", n), a.HpmdFunctions.probtnHpmdTrack(2), t("head").append('<link rel="stylesheet" href="' + a.params.mainStyleCss + '" type="text/css" />'), "iOS" === a.userData.os && (t("body").addClass("btn_os_ios"), t("body").addClass(a.userData.isiPad === !0 ? "btn_device_ipad" : "btn_device_iphone")), t("head").append(a.userData.mobile ? "<style type='text/css'> .fancybox-inner { -webkit-overflow-scrolling: touch !important; overflow: scroll !important; } </style>" : "<style type='text/css'> .fancybox-inner { -webkit-overflow-scrolling: touch !important; overflow: hidden !important; } </style>"), t("#probtn_closeButton").attr("src", a.params.CloseImage), 0 == a.params.NeverClose && t("head").append(t("<style/>", { id: "probtn_style", type: "text/css", html: ["#probtn_button.pizzabtn_normal { display: block; clear: both; position: device-fixed !important; }", ".close_pro_button_normal{ width:" + a.params.CloseSize.W + "px; height:" + a.params.CloseSize.H + "px; opacity:" + a.params.CloseOpacity + "; display: block; clear: both; }"].join("\n") })), ("fullscreen_fancybox" == a.params.ButtonType || "fullscreen" == a.params.ButtonType) && (a.params.ButtonVisible = !1), a.initFunctions.initStartScrollParams(), a.pizzabtn = a.initFunctions.initPizzaButton(), window.probtn_ButtonContentType = a.params.ButtonContentType, a.initFunctions.initScrollChange(), a.initFunctions.initActiveZones(), "fullscreen" !== a.params.ButtonType) { var r = null; try { r = jQuery.fancybox, null !== r && void 0 !== r && (r = jQuery.fancybox.open) } catch (o) { } "function" == typeof r ? e() : t.getScript(a.params.fancyboxJsPath, e) } else a.initFunctions.fullscreenInitAndShow(); a.additionalButtonFunctions.animation.checkAndRunAnimation(), a.initFunctions.initScrollChange(!0)
                    }
                }
            } String.prototype.ProBtnHashCode = function () { var t = 0, n = 0, e = 0; if (0 === this.length) return t; for (e = 0, l = this.length; e < l; e++) n = this.charCodeAt(e), t = (t << 5) - t + n, t |= 0; return t }; var a = {
                guidCookieControlPath: "//cdn.probtn.com/cookie_iframe/cookie-iframe.html", uaParserPath: "//cdn.probtn.com/libs/ua-parser.js", currentDomain: document.domain.replace("www.", ""), realDomain: document.domain.replace("www.", ""), initializedActiveZones: {}, mainVersion: "1.34.1947_13072015_dev", hintText: void 0, pizzabtn: void 0, closebutton: void 0, overlaped: !1, buttonMainParams: { isEmpty: !0 }, onButtonTap: function (n, e, i) { if (a.params.Debug && console.log("onButtonTap"), window.probtn_button_tap = !0, a.params.MainButtonClickable === !1 && (a.params.Debug && console.log("ProBtnControl.params.ActiveZoneMainButtonClickEnabled " + a.params.MainButtonClickable), "" == e || null == e || void 0 == e)) return void (a.params.Debug && console.log("areaname empty")); if (null !== n && void 0 !== n && "" !== n || (n = a.params.ContentURL), "button_and_scroll_zones" == a.params.ButtonType && "" !== a.params.currentContentURL && null !== a.params.currentContentURL && void 0 !== a.params.currentContentURL && (n = a.params.currentContentURL), n = a.additionalButtonFunctions.replaceRandom(n), n = a.additionalButtonFunctions.getContentUrlWithUtm(n), null !== i && void 0 !== i && "" !== i) a.params.Debug && console.log("currentButtonContentType" + i); else if (i = a.params.ButtonContentType, "menu" == a.params.ButtonType) return void a.initFunctions.initFloatingMenu(); if ("iframe" == i && a.additionalButtonFunctions.sendMessageToParent("probtn_onbuttontap"), a.contentTime.startTimer(), a.HpmdFunctions.expandHpmdTrack(), a.additionalButtonFunctions.animation.animationRuning && a.additionalButtonFunctions.animation.doneAnimation(), a.params.dfp.isDFP) try { "" != a.params.dfp.clickUrlEsc && t.get(a.params.dfp.clickUrlEsc, function () { }) } catch (o) { a.params.Debug && console.log(o) } if (a.params.ClickCounterLink && "" !== a.params.ClickCounterLink) try { a.statistics.createClickCounterImage(a.params.ClickCounterLink) } catch (o) { a.params.Debug && console.log(o) } a.additionalButtonFunctions.MaximizeWrapper(function () { }); var r = a.additionalButtonFunctions.isLandscape() && a.userData.mobile, s = a.pizzabtn.position(), c = s.top, l = s.left, p = window.innerWidth, d = window.innerHeight, u = "0px", m = "0px", b = (p + a.params.ButtonSize.W) / 2, f = (d + a.params.ButtonSize.H) / 2; c >= f && (u = d - a.params.ButtonSize.H + "px"), l >= b && (m = p - a.params.ButtonSize.W + "px"); var g = a.additionalButtonFunctions.getFancyboxMargins(), h = { property: r ? "left" : "top", currentValue: r ? l : c, finishValue: r ? m : u }, v = t("#probtn_button").offset().left, w = t("#probtn_button").offset().top; if (t.pep.toggleAll(!1), "youtube" == a.params.ButtonContentType) return a.statistics.SendStatisticsData("ContentShowed", 1), probtn_callPlayer("video_probtn"), t("#youtube_fullscreen").show(), t("#fullscreen_probtn").show(), a.additionalButtonFunctions.youtubeModalWindowSizes(), a.contentTime.startTimer(), a.HpmdFunctions.expandHpmdTrack(), a.additionalButtonFunctions.onOrientationChange(null), void probtn_callPlayer("video_probtn"); var y = { href: n, sandbox: "allow-same-origin allow-scripts allow-popups allow-forms", type: "iframe", autoCenter: !0, titlePosition: "inside", scrolling: "yes", margin: g, scrollOutside: !0, speedIn: 1e3, openSpeed: 1e3, closeSpeed: 0, speedOut: 0, openOpacity: !1, padding: "0px", height: "100%", minWidth: 100, minHeight: 100, autoHeight: !1, autoWidht: !1, autoResize: !1, autoSize: !1, iframe: { sandbox: "allow-same-origin allow-scripts allow-popups allow-forms", preload: !1, scrolling: "yes" }, helpers: { overlay: { locked: !1, speedIn: 0, speedOut: 0, showEarly: !0 }, title: { type: "inside" } }, beforeLoad: function () { a.hintText.hide(), t(".fancybox-iframe").first().attr("sandbox", "allow-same-origin allow-scripts allow-popups allow-forms"), a.pizzabtn.css(h.property, h.finishValue), "top" == h.property ? a.pizzabtn.css("left", v + "px") : a.pizzabtn.css("top", w + "px"), "iOS" === a.userData.os && t(document.body).bind("touchmove", function (t) { t.preventDefault(), t.stopPropagation(), t.returnValue = !1 }), t("html").css("overflow", "hidden") }, afterShow: function () { var n = t("#probtn_wrapper"), o = { width: a.additionalButtonFunctions.getWindowWidth(), height: a.additionalButtonFunctions.getWindowHeight(), position: "fixed" }; n.css(o), t(".fancybox-iframe").first().attr("sandbox", "allow-same-origin allow-scripts allow-popups allow-forms"); try { t(".fancybox-iframe").first().contents().find("html").css("visibility", "visible !important") } catch (r) { } t(".fancybox-iframe").first().attr("id"); if (a.additionalButtonFunctions.setIfameSizes(), a.pizzabtn.bind("click", t.fancybox.close), "video" === i) { a.additionalButtonFunctions.onOrientationChange(null); try { if (null !== e && void 0 !== e) { var s = t("#video_probtn_" + e).get(0); s.play() } else { var s = t("#video_probtn").get(0); s.play() } } catch (r) { a.params.Debug && console.log(r) } } }, afterClose: function () { if ("video" === i) try { if (null !== e && void 0 !== e) { var n = t("#video_probtn_" + e).get(0); n.pause() } else { var n = t("#video_probtn").get(0); n.pause() } } catch (o) { } "menu" !== a.params.ButtonType && a.additionalButtonFunctions.MinimizeWrapper(function () { }, a.params.MinimizeWrapperTime), "iOS" === a.userData.os && t(document.body).unbind("touchmove"), t("html").css("overflow", "auto"), a.pizzabtn.unbind("click"), t.pep.toggleAll(!0), a.additionalButtonFunctions.closeAfterOrientationChange ? (a.pizzabtn.center(), a.additionalButtonFunctions.closeAfterOrientationChange = !1) : a.pizzabtn.css(h.property, h.currentValue + "px"), 1 == a.params.HideAfterFirstShow && a.additionalButtonFunctions.hideAll(), a.contentTime.endTimer(), a.HpmdFunctions.closeHpmdTrack() } }; if (y.type = a.params.FancyboxType, "video" === i) { y.type = "inline"; try { y.href = null !== e && void 0 !== e ? "#video_item_" + e : "#video_item" } catch (o) { } } if (a.params.Debug === !0) var S = a.params.VendorText + " " + a.mainVersion; else var S = a.params.VendorText; "" !== S && a.params.ButtonEnabled === !0 && a.params.ButtonVisible === !0 && (y.title = a.additionalButtonFunctions.getTitleTextForModalWindow(), y.titleShow = !0), a.params.IsManualSize === !0 ? (y.width = a.params.ContentSize.X, y.height = a.params.ContentSize.Y) : (y.width = a.params.ContentSize.W, y.height = a.params.ContentSize.H), a.params.MaxWidth > 0 && (y.maxWidth = a.params.MaxWidth), a.params.MaxHeight > 0 && (y.maxHeight = a.params.MaxHeight); var B = function () { 1 == a.params.HideAfterFirstShow && (a.statistics.SendStatObject({ Hidded: 1 }), a.pizzabtn.hide(), a.closeButton.remove(), a.additionalButtonFunctions.hideAllActiveZones()) }; if (a.params.OpenExternal === !0) a.statistics.SendStatisticsData("ContentShowed", 1), t.pep.toggleAll(!0), window.open(n, "_blank"), a.additionalButtonFunctions.MinimizeWrapper(function () { }), B(); else if ("anchor" == i) "#" == n.charAt(0) ? (t.pep.toggleAll(!0), window.location.hash = "", window.location.hash = n) : a.statistics.SendStatisticsData("ContentShowed", 1, null, function () { t.pep.toggleAll(!0), window.open(n, "_top"), B() }); else { null !== e && void 0 !== e ? a.statistics.sendAreaActivatedStats(e) : a.statistics.SendStatisticsData("ContentShowed", 1); var z = t("#probtn_wrapper"), I = { width: a.additionalButtonFunctions.getWindowWidth(), height: a.additionalButtonFunctions.getWindowHeight(), position: "fixed" }; z.css(I), t.fancybox.open(y) } }, contentTime: { contentOpenedTime: 0, startTimer: function () { void 0 !== a.contentTime.intervalId || clearInterval(a.contentTime.intervalId), a.contentTime.contentOpenedTime = 0, a.contentTime.intervalId = setInterval(function () { a.contentTime.contentOpenedTime++ }, 1e3) }, endTimer: function () { clearInterval(a.contentTime.intervalId), a.contentTime.intervalId = void 0, a.params.Debug && console.log("ProBtnControl.contentTime.contentOpenedTime - " + a.contentTime.contentOpenedTime), a.statistics.SendStatisticsData("ContentShowedDuration", a.contentTime.contentOpenedTime) }, intervalId: void 0 }, userData: {}, geolocation: { getLocation: function () { try { navigator.geolocation ? navigator.geolocation.getCurrentPosition(a.geolocation.getPosition) : a.params.Debug && console.log("Geolocation is not supported by this browser.") } catch (t) { a.params.Debug && console.log(t) } }, getPosition: function (t) { try { a.params.Debug && console.log(t), a.geolocation.longitude = t.coords.latitude, a.geolocation.latitude = t.coords.longitude } catch (n) { a.params.Debug && console.log(n) } }, longitude: null, latitude: null }, userDataFunction: function () { try { var t = "Unbekannt", n = "", e = "", i = ""; screen.width && (e = screen.width ? screen.width : "", i = screen.height ? screen.height : "", n += "" + e + " x " + i); var o, r, s, c = navigator.appVersion, l = navigator.userAgent, p = navigator.appName, d = "" + parseFloat(navigator.appVersion), u = parseInt(navigator.appVersion, 10); -1 != (r = l.indexOf("Opera")) ? (p = "Opera", d = l.substring(r + 6), -1 != (r = l.indexOf("Version")) && (d = l.substring(r + 8))) : -1 != (r = l.indexOf("MSIE")) ? (p = "Microsoft Internet Explorer", d = l.substring(r + 5)) : -1 != (r = l.indexOf("Chrome")) ? (p = "Chrome", d = l.substring(r + 7)) : -1 != (r = l.indexOf("Safari")) ? (p = "Safari", d = l.substring(r + 7), -1 != (r = l.indexOf("Version")) && (d = l.substring(r + 8))) : -1 != (r = l.indexOf("Firefox")) ? (p = "Firefox", d = l.substring(r + 8)) : (o = l.lastIndexOf(" ") + 1) < (r = l.lastIndexOf("/")) && (p = l.substring(o, r), d = l.substring(r + 1), p.toLowerCase() == p.toUpperCase() && (p = navigator.appName)), -1 != (s = d.indexOf(";")) && (d = d.substring(0, s)), -1 != (s = d.indexOf(" ")) && (d = d.substring(0, s)), u = parseInt("" + d, 10), isNaN(u) && (d = "" + parseFloat(navigator.appVersion), u = parseInt(navigator.appVersion, 10)); var m = /Mobile|mini|Fennec|Android|iP(ad|od|hone)/.test(c), b = navigator.cookieEnabled ? !0 : !1; "undefined" != typeof navigator.cookieEnabled || b || (document.cookie = "testcookie", b = -1 != document.cookie.indexOf("testcookie") ? !0 : !1); var f = t, g = [{ s: "Windows 3.11", r: /Win16/ }, { s: "Windows 95", r: /(Windows 95|Win95|Windows_95)/ }, { s: "Windows ME", r: /(Win 9x 4.90|Windows ME)/ }, { s: "Windows 98", r: /(Windows 98|Win98)/ }, { s: "Windows CE", r: /Windows CE/ }, { s: "Windows 2000", r: /(Windows NT 5.0|Windows 2000)/ }, { s: "Windows XP", r: /(Windows NT 5.1|Windows XP)/ }, { s: "Windows Server 2003", r: /Windows NT 5.2/ }, { s: "Windows Vista", r: /Windows NT 6.0/ }, { s: "Windows 7", r: /(Windows 7|Windows NT 6.1)/ }, { s: "Windows 8.1", r: /(Windows 8.1|Windows NT 6.3)/ }, { s: "Windows 8", r: /(Windows 8|Windows NT 6.2)/ }, { s: "Windows NT 4.0", r: /(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/ }, { s: "Windows ME", r: /Windows ME/ }, { s: "Android", r: /Android/ }, { s: "Open BSD", r: /OpenBSD/ }, { s: "Sun OS", r: /SunOS/ }, { s: "Linux", r: /(Linux|X11)/ }, { s: "iOS", r: /(iPhone|iPad|iPod)/ }, { s: "Mac OS X", r: /Mac OS X/ }, { s: "Mac OS", r: /(MacPPC|MacIntel|Mac_PowerPC|Macintosh)/ }, { s: "QNX", r: /QNX/ }, { s: "UNIX", r: /UNIX/ }, { s: "BeOS", r: /BeOS/ }, { s: "OS/2", r: /OS\/2/ }, { s: "Search Bot", r: /(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask Jeeves\/Teoma|ia_archiver)/ }]; try { for (var h in g) { var v = g[h]; if (v.r.test(l)) { f = v.s; break } } var w = t; switch (/Windows/.test(f) && (w = /Windows (.*)/.exec(f)[1], f = "Windows"), f) { case "Mac OS X": w = /Mac OS X (10[\.\_\d]+)/.exec(l)[1]; break; case "Android": w = /Android ([\.\_\d]+)/.exec(l)[1]; break; case "iOS": w = /OS (\d+)_(\d+)_?(\d+)?/.exec(c), w = w[1] + "." + w[2] + "." + (0 | w[3]) } } catch (y) { f = t } var S = null != navigator.userAgent.match(/iPad/i), B = { screen: n, screenWidth: e, screenHeight: i, browser: p, browserVersion: d, browserMajorVersion: u, mobile: m, os: f, osVersion: w, cookies: b, isiPad: S }; return a.userData = B, B } catch (y) { return void 0 } }, XProBtnToken: "b04bb84b22cdacb0d57fd8f8fd3bfeb8ad430d1b", serverUrl: "//admin.probtn.com", GetDeviceUID: function () { var t = "1234"; if (null != a.cookieFunctions.readCookie("probtnId")); else { var n = new Date; n = n.getTime(), t = n.toString() + "-" + navigator.userAgent.toString().ProBtnHashCode(), a.cookieFunctions.createCookie("probtnId", t, 365) } return a.cookieFunctions.setHashCookie(), t = a.cookieFunctions.readCookie("probtnId") }, DeviceCID: "", cookieFunctions: { getDeviceCID: function (n) { var e = a.cookieFunctions.readCookie("probtnCID"); if (null !== e && void 0 !== e && "" !== e) a.DeviceCID = e, n(e); else { var i = function (t) { a.params.Debug && console.log("event", t), void 0 !== t.data.type && null !== t.data.type && "probtnCID" === t.data.type && (a.cookieFunctions.createCookie("probtnCID", t.data.cid, 365), a.DeviceCID = t.data.cid, n(t.data.cid)) }; window.self.addEventListener("message", i, !1), t("#guidIframe").remove(); { t("<iframe/>", { id: "guidIframe", scrolling: "no", seamless: "seamless", src: a.guidCookieControlPath, css: { width: "0px", height: "0px", position: "absolute", top: "-10000px", left: "-10000px" } }).appendTo("body") } } }, setHashCookie: function () { for (var t, n = /#\S*=/g, e = window.location.hash; null !== (t = n.exec(e)) ;) { t.index === n.lastIndex && n.lastIndex++; var i = t[0].replace("=", ""); if ("#probtn_deviceid" == i) { var o = e.replace(t[0], ""); "" !== o && void 0 !== o && null !== o ? a.cookieFunctions.createCookie("probtnId", "_NAMED_" + o, 365) : (a.cookieFunctions.eraseCookie("probtnId"), a.GetDeviceUID()) } } }, createCookie: function (t, n, e) { var i = ""; if (e) { var a = new Date; a.setTime(a.getTime() + 24 * e * 60 * 60 * 1e3), i = "; expires=" + a.toGMTString() } document.cookie = t + "=" + n + i + "; path=/" }, readCookie: function (t) { for (var n = t + "=", e = document.cookie.split(";"), i = 0; i < e.length; i++) { for (var a = e[i]; " " == a.charAt(0) ;) a = a.substring(1, a.length); if (0 === a.indexOf(n)) return a.substring(n.length, a.length) } return null }, eraseCookie: function (t) { a.cookieFunctions.createCookie(t, "", -1) } }, allButtonInit: !1, params: {}, HpmdFunctions: { probtnHpmdTrack: function (t) { if (a.params.isHPMD) try { void 0 === t && (t = 1) } catch (n) { } }, closeHpmdTrack: function () { if (a.params.isHPMD) try { a.params.hpmd.trackEvent("hpmd.close"), a.params.hpmd.trackEvent("hpmd.time-expanded", { weight: a.contentTime.contentOpenedTime }) } catch (t) { } }, expandHpmdTrack: function () { if (a.params.isHPMD) try { a.params.hpmd.trackEvent("hpmd.expand") } catch (t) { a.params.Debug && console.log(t) } } }, randomElements: { probtnId: "probtn_button_" }, statistics: { createClickCounterImage: function (n) { var e = n, e = a.additionalButtonFunctions.replaceRandom(n); e == n && (e = a.additionalButtonFunctions.replaceUrlParam(e, "probtn_random", a.additionalButtonFunctions.randomString(12))); t("<img/>", { id: "probtn_ClickCounterLink_" + a.additionalButtonFunctions.randomString(12), src: e, style: "width: 1px; height: 1px; position: absolute; left: -10001px; top: -10001px;" }).prependTo("body") }, sendAreaActivatedStats: function (n, e) { if (a.params.isServerCommunicationEnabled) { var i = "1234"; i = a.GetDeviceUID(); var o = a.DeviceCID; t.getJSON(a.serverUrl + "/1/functions/updateUserStatistic?BundleID=" + a.currentDomain + "&DeviceType=web&CampaignID=" + a.params.CampaignID + "&Version=1.0&DeviceUID=" + i + "&DeviceCUID=" + o + "&localDomain=" + a.realDomain + '&Statistic={"ContentShowed": "1"}&X-ProBtn-Token=b04bb84b22cdacb0d57fd8f8fd3bfeb8ad430d1b&AZName=' + n + "&callback=?", function () { }).done(function () { }).fail(function () { }).always(function () { null !== e && void 0 !== e && e() }) } }, sendScrollAreaShowedStats: function (n, e) { if (a.params.isServerCommunicationEnabled) { var i = "1234"; i = a.GetDeviceUID(); var o = a.DeviceCID; t.getJSON(a.serverUrl + "/1/functions/updateUserStatistic?BundleID=" + a.currentDomain + "&DeviceType=web&CampaignID=" + a.params.CampaignID + "&Version=1.0&DeviceUID=" + i + "&DeviceCUID=" + o + "&localDomain=" + a.realDomain + '&Statistic={"ScrollZoneShowed": "1"}&X-ProBtn-Token=b04bb84b22cdacb0d57fd8f8fd3bfeb8ad430d1b&AZName=' + n + "&callback=?", function () { }).done(function () { }).fail(function () { }).always(function () { null !== e && void 0 !== e && e() }) } }, SendBrowserStatsInfo: function () { try { a.params.isServerCommunicationEnabled && a.statistics.SendStatisticsDataObject({ Resolution: a.userData.screen, Browser: a.userData.browser, BrowserVersion: a.userData.browserVersion, OS: a.userData.os + " " + a.userData.osVersion }) } catch (t) { a.params.Debug && console.log(t) } }, SendCustomStat: function (n, e, i, o) { a.params.isServerCommunicationEnabled && t.getJSON(a.serverUrl + "/1/functions/updateCustomStatistic?BundleID=" + o + "&DeviceType=web&CampaignID=" + a.params.CampaignID + "&Version=1.0&DeviceUID=" + i + "&localDomain=" + realDomain + '&Statistic={"' + n + '": "' + e + '"}&X-ProBtn-Token=b04bb84b22cdacb0d57fd8f8fd3bfeb8ad430d1b&callback=?', function () { }).done(function () { }).fail(function () { }).always(function () { null !== callback && void 0 !== callback && callback() }) }, SendStatisticsData: function (t, n, e, i) { if (a.params.isServerCommunicationEnabled) { var o = "1234"; ("" == t || null == t) && (t = "Opened"), ("" == n || null == n) && (n = 1), o = a.GetDeviceUID(); { a.DeviceCID } "" == e || null == e || void 0 == e ? a.statistics.SendStat(t, n, o, a.currentDomain, i) : a.statistics.SendCustomStat(t, n, o, a.currentDomain, i) } }, SendStat: function (n, e, i, o, r) { a.params.isServerCommunicationEnabled && t.getJSON(a.serverUrl + "/1/functions/updateUserStatistic?BundleID=" + o + "&Version=1.0&DeviceType=web&CampaignID=" + a.params.CampaignID + "&DeviceUID=" + i + "&DeviceCUID=" + a.DeviceCID + "&localDomain=" + a.realDomain + '&Statistic={"' + n + '": "' + e + '"}&X-ProBtn-Token=b04bb84b22cdacb0d57fd8f8fd3bfeb8ad430d1b&callback=?', function () { }).done(function () { }).fail(function () { }).always(function () { null !== r && void 0 !== r && r() }) }, SendStatObject: function (n, e) { var i = JSON.stringify(n), o = "1234"; o = a.GetDeviceUID(); var r = a.DeviceCID; a.params.isServerCommunicationEnabled && t.getJSON(a.serverUrl + "/1/functions/updateUserStatistic?BundleID=" + a.currentDomain + "&Version=1.0&DeviceType=web&CampaignID=" + a.params.CampaignID + "&DeviceUID=" + o + "&DeviceCUID=" + r + "&localDomain=" + a.realDomain + "&Statistic=" + i + "&X-ProBtn-Token=b04bb84b22cdacb0d57fd8f8fd3bfeb8ad430d1b&callback=?", function (t) { a.params.Debug && console.log(t) }).done(function () { }).fail(function () { }).always(function () { a.params.Debug && console.log("SendStat always"), null !== e && void 0 !== e && e() }) }, SendStatisticsDataObject: function (n, e) { var i = "1234"; i = a.GetDeviceUID(); var o = a.DeviceCID; a.params.isServerCommunicationEnabled && t.getJSON(a.serverUrl + "/1/functions/updateCustomStatistic?BundleID=" + a.currentDomain + "&Version=1.0&DeviceType=web&CampaignID=" + a.params.CampaignID + "&DeviceUID=" + i + "&DeviceCUID=" + o + "&localDomain=" + a.realDomain + "&Statistic=" + JSON.stringify(n) + "&X-ProBtn-Token=b04bb84b22cdacb0d57fd8f8fd3bfeb8ad430d1b&callback=?", function (t) { a.params.Debug && console.log(t) }).done(function () { }).fail(function () { }).always(function () { a.params.Debug && console.log("SendStat always"), null !== e && void 0 !== e && e() }) } }, videoFunctions: { createVideoItem: function (n, e) { var i = "video_item", o = "video_probtn"; null !== n && void 0 !== n && "" !== n && (i = "video_item_" + n, o = "video_probtn_" + n), t(i).remove(); var r = '<div id="' + i + '" class="probtn_video_wrapper2" style="display: none; width: auto; height: auto; margin: 0 auto; vertical-align: middle; background: black;">         <table class="probtn_video_wrapper2" style="width: auto; height: auto; margin: 0 auto;"><tr><td style="vertical-align: middle; text-align: center;"><video webkit-playsinline id="' + o + '" class="probtn_video"  controls="controls" width="100%"height="100%" style="background: black; margin: 0 auto; vertical-align: middle; width: 100%; height: 100%; display: inline-block;">           <source src="' + e + '" type="video/mp4">             Your browser does not support the video tag.         </video></td></tr></table>     </div>'; t("body").append(r); var s = window.innerWidth - 30, c = window.innerHeight - 60; a.params.IsManualSize === !0 && (s = -1 !== a.params.ContentSize.X.indexOf("%") ? window.innerWidth * (parseFloat(a.params.ContentSize.X) / 100) : a.params.ContentSize.X, c = -1 !== a.params.ContentSize.Y.indexOf("%") ? window.innerHeight * (parseFloat(a.params.ContentSize.Y) / 100) : a.params.ContentSize.Y); var l = 0, p = 0; s > c ? (l = c, p = l / a.params.VideoSize.Y * a.params.VideoSize.X) : (p = s, l = p / a.params.VideoSize.X * a.params.VideoSize.Y), t("#" + o).width(p), t("#" + o).height(l) } }, initFunctions: {
                    initFloatingMenu: function () { a.initFunctions.initRemoveMenu(), a.hintText.makeInvisible(), a.pizzabtn.stop(!0, !0), a.additionalButtonFunctions.MaximizeWrapper(function () { var n = t("#probtn_wrapper"); n.css("background", "rgba(0, 0, 0, 0.5)"), a.pizzabtn.stop(!0, !0), setTimeout(function () { a.pizzabtn.animate({ left: 0, top: window.innerHeight - a.pizzabtn.height() }, 500, function () { setTimeout(function () { var n = t("<div/>", { id: "probtn_menu", style: "opacity: 0.1" }).prependTo("#probtn_wrapper"), e = t("<ul/>", { id: "probtn_menu_ul" }).prependTo(n); if (a.params.MenuItems) { var i = "style='font-size:" + a.params.MenuOptions.FontSize + "; font-family: " + a.params.MenuOptions.FontFamily + "; color: " + a.params.MenuOptions.ForegroundColor + " '"; t.each(a.params.MenuItems, function (n, o) { var r = ""; r = void 0 !== o.Image && null !== o.Image && "" !== o.Image ? "<img style='height: 40px; margin-right: 10px;' src='" + o.Image + "'/>" : "<div class='probtn_image_placeholder' style='display: inline-block; width: 40px; height:40px; margin-right: 10px;'>&nbsp;</div>"; var s = o.ActionURL; "video" == o.Type && (s = "#video_item_" + o.Name); var c = "return false"; "video" == o.Type && a.userData.mobile && (c = a.params.ButtonOnClick + " return false"), e.append("<li style='opacity: 0;'><span " + i + "><a " + i + " class='probtn_menu_link " + o.Type + "' rel='" + o.Name + "' rev='" + o.Type + "' target='_blank' onclick='" + c + "' href='" + s + "'>" + r + "<span>" + o.Text + "</span></a></span></li>"), t("#probtn_menu li:last").css({ "margin-left": -t("#probtn_menu li:last").width() }), "video" == o.Type && a.videoFunctions.createVideoItem(o.Name, o.ActionURL) }) } t(document).on("click", ".probtn_menu_link", function () { var n = t(this).attr("rev"); switch (n) { case "external": window.probtn_dropedActiveZone = {}, window.probtn_dropedActiveZone.currentActiveZone = null, window.probtn_ButtonContentType = "external", a.statistics.sendAreaActivatedStats(t(this).attr("rel")), window.open(t(this).attr("href")); break; case "iframe": window.probtn_dropedActiveZone = {}, window.probtn_dropedActiveZone.currentActiveZone = null, window.probtn_ButtonContentType = "iframe", a.statistics.sendAreaActivatedStats(t(this).attr("rel")), a.onButtonTap(t(this).attr("href"), null, "iframe"); break; case "video": window.probtn_dropedActiveZone = {}, window.probtn_dropedActiveZone.currentActiveZone = {}, window.probtn_dropedActiveZone.currentActiveZone.ButtonContentType = "video", window.probtn_dropedActiveZone.currentActiveZone.Name = t(this).attr("rel"), window.probtn_ButtonContentType = "video", a.statistics.sendAreaActivatedStats(t(this).attr("rel")), a.onButtonTap(t(this).attr("href"), t(this).attr("rel"), "video"); break; default: a.statistics.sendAreaActivatedStats(t(this).attr("rel")), window.open(t(this).attr("href")) } }), n.css("top", a.pizzabtn.position().top - e.height()), n.css("left", 0), n.css("display", "block"), n.animate({ left: 1, opacity: 1 }, 500, function () { }); var o = 300; t.each(t("#probtn_menu li"), function (n, e) { t(e).animate({ "margin-left": 0, opacity: 1 }, o, function () { }), o += 300 }) }, 300) }) }, 1) }) }, initRemoveMenu: function () { var n = t("#probtn_wrapper"); n.css("background", "rgba(0, 0, 0, 0)"), t("#probtn_menu").remove() }, hintTextStyle: {}, fullscreenInitAndShow: function () { var n = null; if (a.params.HideAfterFirstShow === !0 ? n = a.cookieFunctions.readCookie("probtnCloseFlag") : a.cookieFunctions.eraseCookie("probtnCloseFlag"), null === n) { var e = "return false;", i = ""; "" !== a.params.FullscreenClickLink && void 0 !== a.params.FullscreenClickLink && null !== a.params.FullscreenClickLink && (e = a.additionalButtonFunctions.getContentUrlWithUtm(a.params.FullscreenClickLink), i = '<div id="probtn_iframe_overlay" style="  z-index: 200000; display: inline-block; width: 100%; height: 100%; margin-top: -100%;"></div>'), t("body").append('<div class="fancybox-overlay fancybox-overlay-fixed" style="width: auto; height: auto; display: block;"></div>'), t("body").append('<div id="fullscreen_probtn"><div class="fancybox-wrap fancybox-mobile fancybox-type-iframe fancybox-opened" tabindex="-1" style="margin: 0 auto; height: auto; position: fixed; opacity: 1; overflow: visible;"><div class="fancybox-skin" style="padding: 0px; width: auto; height: auto;"><div class="fancybox-outer"><div class="fancybox-inner" style="overflow: scroll; "><iframe id="probtn_fullscreen_iframe" class="fancybox-iframe" frameborder="0" vspace="0" hspace="0" webkitallowfullscreen="" mozallowfullscreen="" allowfullscreen="" scrolling="auto" src="' + a.additionalButtonFunctions.getContentUrlWithUtm(a.params.ContentURL) + '" sandbox="allow-same-origin allow-scripts allow-popups allow-forms"></iframe>' + i + '</div></div><a title="Close" class="fancybox-item fancybox-close" href="javascript:;"></a></div></div></div'), a.statistics.SendStatObject({ ContentShowed: 1, Showed: 1 }), a.interactionFunctions.initInteractionTimer(), t("body").on("click", "#probtn_iframe_overlay", function () { a.statistics.SendStatObject({ Clicked: 1 }), window.open(e) }), a.contentTime.startTimer(), a.HpmdFunctions.expandHpmdTrack(), a.additionalButtonFunctions.onOrientationChange(null), t("body").on("click", "#fullscreen_probtn .fancybox-close, .fancybox-overlay", function () { t("#fullscreen_probtn").hide(), t(".fancybox-overlay").hide(), a.contentTime.endTimer(), a.HpmdFunctions.closeHpmdTrack() }), a.params.HideAfterFirstShow === !0 && a.cookieFunctions.createCookie("probtnCloseFlag", !0, 60) } }, initActiveZones: function () { if ((null !== a.params.ActiveZones || a.params.ActiveZones.length > 0) && "button_and_active_zones" == a.params.ButtonType) for (var n = 0; n < a.params.ActiveZones.length; n++) { var e = a.params.ActiveZones[n]; e.ActiveSize = a.additionalButtonFunctions.convertPercentButtonSize(e.ActiveSize), e.InactiveSize = a.additionalButtonFunctions.convertPercentButtonSize(e.InactiveSize), ("" == e.Name || null == e.Name || void 0 == e.Name) && (e.Name = a.additionalButtonFunctions.randomString(12)); var i = "<img/>"; "iframe" == e.ButtonImageType && (i = "<iframe/>"), (null == e.ButtonIframeInitialSize || void 0 == e.ButtonIframeInitialSize) && (e.ButtonIframeInitialSize = { W: 0, H: 0 }); var o = t(i, { id: "probtn_active_zone_" + e.Name, src: e.InactiveImage, "class": "probtn_active_zone", rel: e.Name, scrolling: "no", css: { position: "fixed", width: e.InactiveSize.W, height: e.InactiveSize.H, opacity: e.InactiveOpacity, border: "0px", overflow: "hidden" } }).prependTo("body"); "iframe" == e.ButtonImageType && a.additionalButtonFunctions.applyIframeScale(o, e.ButtonIframeInitialSize, e.InactiveSize), a.additionalButtonFunctions.preloadImage(e.ActiveImage), "video" == e.ButtonContentType && a.videoFunctions.createVideoItem(e.Name, e.ActionURL), e.VisibleOnlyInteraction && o.hide(), o.isActive = !1, o.currentActiveZone = e, o.setPosition = function () { var n = t("body"), e = this.currentActiveZone.Position.X, i = this.currentActiveZone.Position.Y, a = (window.innerHeight - this.height()) * i, o = (n.innerWidth() - this.width()) * e + t(window).scrollLeft(); 0 >= a && (a = 0), a + this.height() > window.innerHeight && (a = window.innerHeight - this.height()), 0 >= o && (o = 0), o + this.width() > n.innerWidth() && (o = n.innerWidth() - this.width()), this.css("top", a + "px"), this.css("left", o + "px") }, o.setTransitionDuration = function (t) { var n = t + "s"; this.css({ "transition-duration": n, "-webkit-transition-duration": n, "-moz-transition-duration": n, "-o-transition-duration": n }) }, o.animateActive = function () { this.setTransitionDuration(a.params.CloseActiveDuration), this.isActive = !0, "iframe" !== this.currentActiveZone.ButtonImageType && this.attr("src", this.currentActiveZone.ActiveImage); a.additionalButtonFunctions.checkExistInitIframeSIze(this) ? this.css({ opacity: this.currentActiveZone.ActiveOpacity }) : (this.currentActiveZone.ActiveSize = a.additionalButtonFunctions.convertPercentButtonSize(this.currentActiveZone.ActiveSize), this.css({ opacity: this.currentActiveZone.ActiveOpacity, width: this.currentActiveZone.ActiveSize.W, height: this.currentActiveZone.ActiveSize.H })) }, o.animateInactive = function () { this.setTransitionDuration(a.params.CloseActiveDuration); var t = this; a.additionalButtonFunctions.checkExistInitIframeSIze(t) ? t.css({ opacity: t.currentActiveZone.InactiveOpacity }) : (this.currentActiveZone.InactiveSize = a.additionalButtonFunctions.convertPercentButtonSize(this.currentActiveZone.InactiveSize), t.css({ opacity: t.currentActiveZone.InactiveOpacity, width: t.currentActiveZone.InactiveSize.W, height: t.currentActiveZone.InactiveSize.H })) }, o.requestClickCounterLink = function () { if (this.currentActiveZone.ClickCounterLink && "" !== this.currentActiveZone.ClickCounterLink) try { a.statistics.createClickCounterImage(this.currentActiveZone.ClickCounterLink) } catch (t) { a.params.Debug && console.log(t) } }, o.setPosition(), a.initializedActiveZones[e.Name] = o } }, initScrollChange: function (n) { var e = !1, i = function (n) { var i = a.initFunctions.initStartScrollParams("get"); null == i && null !== a.currentScrollZone && void 0 !== a.currentScrollZone ? a.statistics.sendScrollAreaShowedStats(a.currentScrollZone.Name) : e === !0 && a.statistics.sendScrollAreaShowedStats(i.Name), e = !1, null !== i && (a.currentScrollZone != i && (t("#pizzabtnImg", a.pizzabtn).attr("src", i.ButtonImage), a.statistics.sendScrollAreaShowedStats(i.Name)), i.CustomButtonParams ? (t(a.pizzabtn).css({ width: a.params.ButtonSize.W, height: a.params.ButtonSize.H }), a.currentScrollZone != i && t("#pizzabtnImg", a.pizzabtn).attr("src", i.ButtonImage), t("#pizzabtnImg", a.pizzabtn).css(i.ButtonIframeInitialSize.W > 0 && i.ButtonIframeInitialSize.H > 0 ? { width: i.ButtonIframeInitialSize.W, height: i.ButtonIframeInitialSize.H, opacity: a.params.ButtonOpacity } : { width: a.params.ButtonSize.W, height: a.params.ButtonSize.H, opacity: a.params.ButtonOpacity }), t(a.pizzabtn).css({ width: a.params.ButtonSize.W, height: a.params.ButtonSize.H })) : 0 == a.buttonMainParams.isEmpty && (a.currentScrollZone == i && t("#pizzabtnImg", a.pizzabtn).attr("src", i.ButtonImage), t("#pizzabtnImg", a.pizzabtn).css({ width: a.params.ButtonSize.W, height: a.params.ButtonSize.H, opacity: a.params.ButtonOpacity }), t(a.pizzabtn).css({ width: a.params.ButtonSize.W, height: a.params.ButtonSize.H }))), a.currentScrollZone = i }; "button_and_scroll_zones" == a.params.ButtonType && (null !== n && void 0 !== n ? i(null) : (t.each(a.params.ScrollZones, function (t, n) { a.additionalButtonFunctions.preloadImage(n.ButtonImage), a.additionalButtonFunctions.preloadImage(n.ButtonDragImage) }), e = !0, i(null), t(window).scroll(i))) }, initStartScrollParams: function (n) {
                        if ("button_and_scroll_zones" == a.params.ButtonType) {
                            var e = null, i = document.documentElement, o = ((window.pageXOffset || i.scrollLeft) - (i.clientLeft || 0), (window.pageYOffset || i.scrollTop) - (i.clientTop || 0)), r = navigator.userAgent.toLowerCase(), s = r.indexOf("opera") > -1, c = !s && r.indexOf("msie") > -1, l = function () {
                                return !document.compatMode && !c || s ? (document.parentWindow || document.defaultView).innerHeight : "CSS1Compat" == document.compatMode ? document.documentElement.clientHeight : document.body.clientHeight
                            }, p = function () { return Math.max(document.body.scrollHeight, document.documentElement.scrollHeight, l()) }; if (0 == a.params.ChangeScrollButtonAtFullSiteHeight) { var p = function () { return window.innerHeight }; o = 0 } if (null == n || void 0 == n) { var d = (window.innerHeight - a.params.ButtonSize.H / 2) * a.params.ButtonPosition.Y; (t("body").innerWidth() - a.params.ButtonSize.W / 2) * a.params.ButtonPosition.X + t(window).scrollLeft() + "px" } else var d = a.pizzabtn.position().top; var u = 0; return t.each(a.params.ScrollZones, function (n, i) { (void 0 == i.Name || null == i.Name) && (i.Name = "scrollZone" + n); var r = u + p() * i.ZoneHeight, s = d + o; if (r >= s && s > u) { e = i, (null == a.currentScrollZone || void 0 == a.currentScrollZone) && (a.currentScrollZone = e); try { a.params.currentContentURL = i.CustomContentURL } catch (c) { } if (a.params.ButtonImage = i.ButtonImage, "iframe" == i.ButtonImageType) { if (t("#probtn_hintText").remove(), t("#pizzabtnImg").css("border", "0px solid transparent"), a.currentScrollZone != i) { var l = t("#probtn_button").html(); void 0 !== l && null !== l && (l = l.replace("img", "iframe"), t("#probtn_button").html(l)) } a.params.ButtonImageType = i.ButtonImageType } else { t("#pizzabtnIframeOverlay").remove(); var l = t("#probtn_button").html(); a.currentScrollZone != i && "iframe" === a.currentScrollZone.ButtonImageType && void 0 !== l && null !== l && (l = l.replace("iframe", "img"), t("#probtn_button").html(l)), a.params.ButtonImageType = "image" } if ((null == i.ButtonIframeInitialSize || void 0 == i.ButtonIframeInitialSize) && (i.ButtonIframeInitialSize = { W: 0, H: 0 }), (null == i.ButtonSize || void 0 == i.ButtonSize) && (i.ButtonSize = a.params.ButtonSize), "iframe" == i.ButtonImageType) { if (a.currentScrollZone != i && a.additionalButtonFunctions.applyIframeScale(t("#pizzabtnImg"), i.ButtonIframeInitialSize, i.ButtonSize), t("#pizzabtnIframeOverlay").length <= 0 && a.currentScrollZone != i) { i.ButtonSize = a.additionalButtonFunctions.convertPercentButtonSize(i.ButtonSize), pizzabtnCss = { width: i.ButtonSize.W, height: i.ButtonSize.H, opacity: 1 }, pizzabtnCss.position = "absolute", pizzabtnCss.top = "0px"; { t("<div/>", { id: "pizzabtnIframeOverlay", css: pizzabtnCss }).appendTo(a.pizzabtn) } } i.CustomButtonParams = !0 } else a.additionalButtonFunctions.setTransform(t("#pizzabtnImg"), 1, 1); a.params.ButtonDragImage = "" !== i.ButtonDragImage ? i.ButtonDragImage : i.ButtonImage, "iframe" == i.ButtonImageType && (a.params.ButtonDragImage = ""), i.CustomButtonParams ? (a.buttonMainParams.isEmpty && (a.buttonMainParams.ButtonSize = a.params.ButtonSize, a.buttonMainParams.ButtonDragSize = a.params.ButtonDragSize, a.buttonMainParams.ButtonOpacity = a.params.ButtonOpacity, a.buttonMainParams.ButtonDragOpacity = a.params.ButtonDragOpacity, a.buttonMainParams.isEmpty = !1), "iframe" !== i.ButtonImageType && (i.ButtonSize = a.additionalButtonFunctions.convertPercentButtonSize(i.ButtonSize), i.ButtonDragSize = a.additionalButtonFunctions.convertPercentButtonSize(i.ButtonDragSize)), a.params.ButtonSize = i.ButtonSize, a.params.ButtonDragSize = i.ButtonDragSize, a.params.ButtonOpacity = i.ButtonOpacity, a.params.ButtonDragOpacity = i.ButtonDragOpacity) : 0 == a.buttonMainParams.isEmpty && (a.params.ButtonSize = a.buttonMainParams.ButtonSize, a.params.ButtonDragSize = a.buttonMainParams.ButtonDragSize, a.params.ButtonOpacity = a.buttonMainParams.ButtonOpacity, a.params.ButtonDragOpacity = a.buttonMainParams.ButtonDragOpacity) } u += p() * i.ZoneHeight, a.additionalButtonFunctions.checkAndCorrentButtonPosition() }), e
                        } return null
                    }, initPizzaButton: function () { var n = t("<div/>", { id: "probtn_wrapper" }).prependTo("body"); if ("youtube" === a.params.ButtonContentType) { var e = ""; e = a.additionalButtonFunctions.getTitleTextForModalWindow(), t("body").append('<div class="fancybox-overlay fancybox-overlay-fixed" id="youtube_fullscreen" style="width: auto; height: auto; display: none;""></div>'), t("body").append('<div id="fullscreen_probtn" style="display: none;"><div class="fancybox-wrap fancybox-mobile fancybox-type-iframe fancybox-opened" tabindex="-1" style="margin: 0 auto; height: auto; position: fixed; opacity: 1; overflow: visible;"><div class="fancybox-skin" style="padding: 0px; width: auto; height: auto;"><div class="fancybox-outer"><div class="fancybox-inner" style="overflow: scroll; "><iframe id="video_probtn" class="fancybox-iframe" frameborder="0" vspace="0" hspace="0" webkitallowfullscreen="" mozallowfullscreen="" allowfullscreen="" scrolling="auto" src="' + a.additionalButtonFunctions.getContentUrlWithUtm(a.params.ContentURL) + '" sandbox="allow-same-origin allow-scripts allow-popups allow-forms"></iframe></div></div><div style="background: white;" class="fancybox-title fancybox-title-inside-wrap">' + e + '</div><a title="Close" class="fancybox-item fancybox-close" href="javascript:;"></a></div></div></div'), t("body").on("click", "#fullscreen_probtn .fancybox-close, .fancybox-overlay", function () { t("#fullscreen_probtn").hide(), t(".fancybox-overlay").hide(), a.contentTime.endTimer(), a.HpmdFunctions.closeHpmdTrack(), a.additionalButtonFunctions.MinimizeWrapper(function () { }, a.params.MinimizeWrapperTime), t.pep.toggleAll(!0), probtn_callPlayer("video_probtn", "pauseVideo"), probtn_callPlayer("video_probtn", "stopVideo") }) } if ("video" === a.params.ButtonContentType) { var i = ""; ("" == a.params.VideoClickURL || null == a.params.VideoClickURL || void 0 == a.params.VideoClickURL) && (a.params.VideoClickURL = a.params.VideoPoster); var o = ""; o = '<div id="video_item" class="probtn_video_wrapper2" style="display: none; width: auto; height: auto; margin: 0 auto; vertical-align: middle; background: black;">         <table class="probtn_video_wrapper2" style="width: auto; height: auto; margin: 0 auto;"><tr><td style="vertical-align: middle; text-align: center;"><video webkit-playsinline onclick="' + i + '" poster="' + a.params.VideoPoster + '" id="video_probtn" class="probtn_video"  controls="controls" width="100%"height="100%" style="background: black; margin: 0 auto; vertical-align: middle; width: 100%; height: 100%; display: inline-block;">           <source src="' + a.params.ContentURL + '" type="video/mp4">             Your browser does not support the video tag.         </video></td></tr></table>     </div>', t("body").append(o), "" !== a.params.VideoClickURL && null !== a.params.VideoClickURL && void 0 !== a.params.VideoClickURL && t("body").on("click", "#video_probtn", function () { a.statistics.SendStatisticsData("VideoClicked", 1), window.open(a.params.VideoClickURL) }); var r = window.innerWidth - 30, s = window.innerHeight - 60; a.params.IsManualSize === !0 && (r = -1 !== a.params.ContentSize.X.indexOf("%") ? window.innerWidth * (parseFloat(a.params.ContentSize.X) / 100) : a.params.ContentSize.X, s = -1 !== a.params.ContentSize.Y.indexOf("%") ? window.innerHeight * (parseFloat(a.params.ContentSize.Y) / 100) : a.params.ContentSize.Y); var c = 0, l = 0; r > s ? (c = s, l = c / a.params.VideoSize.Y * a.params.VideoSize.X) : (l = r, c = l / a.params.VideoSize.X * a.params.VideoSize.Y), t(".probtn_video_wrapper").width(r), t(".probtn_video_wrapper").height(s), t(".probtn_video").width(l), t(".probtn_video").height(c) } var p = { width: "auto", height: "auto", position: "fixed" }; if (null !== a.params.TrackingLink && null !== a.params.TrackingLink && "" !== a.params.TrackingLink) { var d = a.params.TrackingLink, d = a.additionalButtonFunctions.replaceRandom(a.params.TrackingLink); d == a.params.TrackingLink && (d = a.additionalButtonFunctions.replaceUrlParam(d, "probtn_random", a.additionalButtonFunctions.randomString(12))); { t("<img/>", { id: "probtn_TrackingLink", src: d, style: "width: 1px; height: 1px; position: absolute; left: -10000px; top: -10000px;" }).prependTo("body") } } n.css(p); var u = t("#probtn_button"); 0 === u.length && (u = t("<div/>", { id: "probtn_button" }).prependTo(n)), u.addClass("pizzabtn_normal"), u.addClass("probtn_normal"), a.userData.mobile && (u.attr("onclick", a.params.ButtonOnClick), u.attr("ontouchend", a.params.ButtonOnTouchEnd), u.attr("ontouchstart", a.params.ButtonOnTouchStart)); var m = {}; if (1 == a.params.ControlInIframeFromParent ? (u.css({ display: "none", width: a.params.ButtonSize.W, height: a.params.ButtonSize.H }), m = { width: a.params.ButtonSize.W, height: a.params.ButtonSize.H, opacity: a.params.ButtonOpacity }) : (u.css({ display: "none", "-webkit-transform": "translateZ(0)", "-moz-transform": "translateZ(0)", "-ms-transform": "translateZ(0)", "-o-transform": "translateZ(0)", transform: "translateZ(0)", "-webkit-backface-visibility": "hidden", "-moz-backface-visibility": "hidden", "-ms-backface-visibility": "hidden", "backface-visibility": "hidden", "-webkit-perspective": 1e3, "-moz-perspective": 1e3, "-ms-perspective": 1e3, perspective: 1e3, "-webkit-transition": "top, left " + a.params.buttonAnimationTimeAfterFancybox + "ms linear", "-moz-transition": "top, left " + a.params.buttonAnimationTimeAfterFancybox + "ms linear", "-ms-transition": "top, left " + a.params.buttonAnimationTimeAfterFancybox + "ms linear", "-o-transition": "top, left " + a.params.buttonAnimationTimeAfterFancybox + "ms linear", transition: "top, left " + a.params.buttonAnimationTimeAfterFancybox + "ms linear", width: a.params.ButtonSize.W, height: a.params.ButtonSize.H }), m = { width: a.params.ButtonSize.W, height: a.params.ButtonSize.H, opacity: a.params.ButtonOpacity, "transition-property": "opacity, width, height", "timing-function": "linear", "-webkit-transition-property": "opacity, width, height", "-webkit-timing-function": "linear", "-moz-transition-property": "opacity, width, height", "-moz-timing-function": "linear", "-o-transition-property": "opacity, width, height", "-o-timing-function": "linear" }), "iframe" == a.params.ButtonImageType) { m.border = "0px", m.overflow = "hidden"; var b = t("<iframe/>", { id: "pizzabtnImg", scrolling: "no", seamless: "seamless", src: a.params.ButtonImage, css: m }).appendTo(u); a.additionalButtonFunctions.applyIframeScale(b, a.params.ButtonIframeInitialSize, a.params.ButtonSize), m.position = "absolute", m.top = "0px"; { t("<div/>", { id: "pizzabtnIframeOverlay", css: m }).appendTo(u) } if (a.params.waitForIframeButtonLoaded) { a.params.Debug && console.log("waitForIframeButtonLoaded hide1"); var f = document.getElementById("pizzabtnImg"); u.hide(), f.onload = function () { a.params.Debug && console.log("waitForIframeButtonLoaded show1"), u.show() } } } else { var b = t("<img/>", { id: "pizzabtnImg", src: a.params.ButtonImage, css: m }).appendTo(u); t("#pizzabtnImg").attr("src", a.params.ButtonImage) } a.additionalButtonFunctions.preloadImage(a.params.ButtonDragImage), a.hintText = t("<span/>", { id: "probtn_hintText", css: { opacity: 0, "transition-property": "opacity", "timing-function": "linear", "-webkit-transition-property": "opacity", "-webkit-timing-function": "linear", "-moz-transition-property": "opacity", "-moz-timing-function": "linear", "-o-transition-property": "opacity", "-o-timing-function": "linear", "transition-duration": a.params.HintShowDuration + "s", "-webkit-transition-duration": a.params.HintShowDuration + "s", "-moz-transition-duration": a.params.HintShowDuration + "s", "-o-transition-duration": a.params.HintShowDuration + "s" }, html: a.params.HintText.replace(/ /g, "&nbsp;") }).appendTo(u), u.hintTextActive = !1, a.additionalButtonFunctions.MinimizeWrapper(function () { }, a.params.MinimizeWrapperTime), a.hintText.makeInvisible = function () { this.css({ "transition-duration": a.params.HintHideDuration + "s", "-webkit-transition-duration": a.params.HintHideDuration + "s", "-moz-transition-duration": a.params.HintHideDuration + "s", "-o-transition-duration": a.params.HintHideDuration + "s" }), this.css("opacity", 0) }, u.center = function () { t("#probtn_wrapper"); this.css("top", (window.innerHeight - this.height()) / 2 + t(window).scrollTop() + "px"), this.css("left", (window.innerWidth - this.width()) / 2 + t(window).scrollLeft() + "px") }, u.show = function () { var t = this; setTimeout(function () { t.stop(!0, !0).fadeIn(1e3 * a.params.ButtonShowDuration) }, 1e3 * a.params.ButtonShowDelay) }, u.hide = function () { var t = jQuery("#probtn_button"); setTimeout(function () { t.stop(!0, !0).fadeOut(1e3 * a.params.ButtonHideDuration) }, 1e3 * a.params.ButtonHideDelay) }, window.proBtn = {}, window.proBtn.hide = u.hide, window.proBtn.hideContent = function () { t.fancybox.close() }, window.proBtn.performAction = function () { null !== a.params.CampaignID && t.getJSON(a.serverUrl + "/1/functions/performAction?DeviceType=web&DeviceUID=" + a.GetDeviceUID() + "&DeviceCUID=" + a.DeviceCID + "&X-ProBtn-Token=" + XProBtnToken + "&CampaignID=" + a.params.CampaignID + "&random=" + Math.random() + "&callback=?", function () { }) }, u.dragAnimate = function () { "" !== a.params.ButtonDragImage && void 0 !== a.params.ButtonDragImage && null !== a.params.ButtonDragImage && "iframe" !== a.params.ButtonImageType && (a.params.Debug && console.log("drag image apply"), b.attr("src", a.params.ButtonDragImage)), setTimeout(function () { a.params.ControlInIframeFromParent !== !0 && b.css({ "transition-duration": a.params.ButtonDragDuration + "s", "-webkit-transition-duration": a.params.ButtonDragDuration + "s", "-moz-transition-duration": a.params.ButtonDragDuration + "s", "-o-transition-duration": a.params.ButtonDragDuration + "s" }), "iframe" !== a.params.ButtonImageType && b.css({ opacity: a.params.ButtonDragOpacity, width: a.params.ButtonDragSize.W, height: a.params.ButtonDragSize.H }) }, 1e3 * a.params.ButtonDragDelay) }, u.undragAnimate = function () { "iframe" !== a.params.ButtonImageType && b.attr("src", a.params.ButtonImage), setTimeout(function () { a.params.ControlInIframeFromParent !== !0 && b.css({ "transition-duration": a.params.ButtonUndragDuration + "s", "-webkit-transition-duration": a.params.ButtonUndragDuration + "s", "-moz-transition-duration": a.params.ButtonUndragDuration + "s", "-o-transition-duration": a.params.ButtonUndragDuration + "s" }), "iframe" !== a.params.ButtonImageType && b.css({ opacity: a.params.ButtonOpacity, width: a.params.ButtonSize.W, height: a.params.ButtonSize.H }) }, 1e3 * a.params.ButtonUndragDelay) }, u.showHint = function () { var t = this; setTimeout(function () { a.hintText.css(a.initFunctions.hintTextStyle), t.hintTextActive = !0; var n = (a.hintText.width() - a.params.ButtonSize.W) / 2; a.hintText.css("margin-left", "-" + n + "px") }, 1e3 * a.params.HintLaunchDelay) }, u.hideHint = function () { var t = this; a.hintText.makeInvisible(), setTimeout(function () { t.animateDuringHintHide() }, 100), t.hintTextActive = !1 }, u.hideHintDelay = function () { setTimeout(function () { a.hintText.makeInvisible() }, 1e3 * a.params.HintLaunchDuration) }, u.animateDuringHintHide = function () { var t = this, n = a.hintText.outerWidth(), e = (n - a.params.ButtonSize.W) / 2; e > 0 && t.css({ width: a.params.ButtonSize.W, height: a.params.ButtonSize.H, left: t.position().left + e }) }; try { var g = (window.innerHeight - a.params.ButtonSize.H / 2) * a.params.ButtonPosition.Y; 0 > g && (g = 0), g + a.params.ButtonSize.H > window.innerHeight && (g = window.innerHeight - a.params.ButtonSize.H); var h = (window.innerWidth - a.params.ButtonSize.W / 2) * a.params.ButtonPosition.X + t(window).scrollLeft(); 0 > h && (h = 0), h + a.params.ButtonSize.W >= window.innerWidth && (h = window.innerWidth - a.params.ButtonSize.W), u.css({ left: h, top: g, position: "absolute" }) } catch (v) { } return a.additionalButtonFunctions.changeBodySize(), a.interactionFunctions.initInteractionTimer(), u }, initCloseButton: function () { var n = t("<img/>", { id: "probtn_closeButton", src: a.params.CloseImage, "class": "close_pro_button_normal probtn_active_zone", css: { position: "fixed", display: "none" } }).prependTo("body"); return 1 == a.params.ClickOnCloseButton && t(document).on("click", "#probtn_closeButton", function () { a.statistics.SendStatObject({ Closed: 1, Hidded: 1 }), a.pizzabtn.hide(), a.closeButton.remove(), a.additionalButtonFunctions.hideAllActiveZones() }), n.active = !1, n.rect = {}, n.css({ "-webkit-transform": "translateZ(0)", "-moz-transform": "translateZ(0)", "-ms-transform": "translateZ(0)", "-o-transform": "translateZ(0)", transform: "translateZ(0)", "-webkit-backface-visibility": "hidden", "-moz-backface-visibility": "hidden", "-ms-backface-visibility": "hidden", "backface-visibility": "hidden", "-webkit-perspective": 1e3, "-moz-perspective": 1e3, "-ms-perspective": 1e3, perspective: 1e3, "transition-property": "opacity, width, height, left, top", "timing-function": "linear", "-webkit-transition-property": "opacity, width, height, left, top", "-webkit-timing-function": "linear", "-moz-transition-property": "opacity, width, height, left, top", "-moz-timing-function": "linear", "-o-transition-property": "opacity, width, height, left, top", "-o-timing-function": "linear" }), n.center = function () { var n = (t("body"), a.params.ClosePosition.X), e = a.params.ClosePosition.Y; 1 == a.params.ControlInIframeFromParent, a.params.CloseSize = a.additionalButtonFunctions.convertPercentButtonSize(a.params.CloseSize); var i = this.height(); 0 == this.height() && (i = a.params.CloseSize.H); var o = this.width(); 0 == this.width() && (o = a.params.CloseSize.W), this.css("top", (a.additionalButtonFunctions.getWindowHeight() - i) * e + "px"), this.css("left", (a.additionalButtonFunctions.getWindowWidth() - o) * n + t(window).scrollLeft() + "px") }, n.show = function () { var t = this; t.center(), setTimeout(function () { t.stop(!0, !0).fadeIn(1e3 * a.params.CloseShowDuration) }, 1e3 * a.params.CloseShowDelay) }, n.hide = function () { var t = this; setTimeout(function () { t.stop(!0, !0).fadeOut(1e3 * a.params.CloseHideDuration) }, 1e3 * a.params.CloseHideDelay) }, n.setTransitionDuration = function (t) { var n = t + "s"; this.css({ "transition-duration": n, "-webkit-transition-duration": n, "-moz-transition-duration": n, "-o-transition-duration": n }) }, n.overlayActive = function () { { var t = this; t.position() } t.setTransitionDuration(a.params.CloseActiveDuration), a.params.CloseActiveSize = a.additionalButtonFunctions.convertPercentButtonSize(a.params.CloseActiveSize), setTimeout(function () { t.css({ opacity: a.params.CloseActiveOpacity, width: a.params.CloseActiveSize.W, height: a.params.CloseActiveSize.H }) }, 1e3 * a.params.CloseActiveDelay) }, n.overlayUnactive = function () { { var n = this, e = (t("body"), a.params.ClosePosition.X), i = a.params.ClosePosition.Y; (a.additionalButtonFunctions.getWindowHeight() - this.height()) * i + "px", (a.additionalButtonFunctions.getWindowHeight() - a.closeButton.width()) * e + t(window).scrollLeft() } n.setTransitionDuration(a.params.CloseUnactiveDuration), setTimeout(function () { a.params.CloseSize = a.additionalButtonFunctions.convertPercentButtonSize(a.params.CloseSize); var t = { opacity: a.params.CloseOpacity, width: a.params.CloseSize.W, height: a.params.CloseSize.H }; n.css(t) }, 1e3 * a.params.CloseUnactiveDelay) }, n.setTransitionDuration(a.params.CloseActiveDuration), n.center(), n }
                }, interactionFunctions: { time: 0, initInteractionTimer: function () { void 0 !== a.interactionFunctions.intervalId || clearInterval(a.interactionFunctions.intervalId), a.interactionFunctions.time = 0, a.params.HideWithoutInteractionTime > 0 && (a.contentTime.intervalId = setTimeout(function () { if (0 == a.interactionFunctions.wasInteraction || void 0 == a.interactionFunctions.wasInteraction) { a.statistics.SendStatObject({ Hidded: 1 }); try { a.pizzabtn.hide(), a.closeButton.remove(), a.additionalButtonFunctions.hideAllActiveZones() } catch (n) { a.params.Debug && console.log(n) } if ("fullscreen" == a.params.ButtonType) try { t(".fancybox-overlay").remove(), t("#fullscreen_probtn").remove() } catch (n) { } } }, a.params.HideWithoutInteractionTime)) }, intervalId: void 0, wasInteraction: !1 }, additionalButtonFunctions: {
                    getTitleTextForModalWindow: function () { var t = ""; if (a.params.Debug === !0) var n = a.params.VendorText + " " + a.mainVersion; else var n = a.params.VendorText; if ("" !== n && a.params.ButtonEnabled === !0 && a.params.ButtonVisible === !0) try { t = "<style> .fancybox-title-inside-wrap {color: rgba(" + a.params.VendorColor.R + "," + a.params.VendorColor.G + "," + a.params.VendorColor.B + "," + a.params.VendorColor.A + "); text-align: center; } </style><a style='font-family: " + a.params.VendorTextFont.Family + "; font-size: " + a.params.VendorTextFont.Size + "px; color: rgba(" + a.params.VendorTextColor.R + "," + a.params.VendorTextColor.G + "," + a.params.VendorTextColor.B + "," + a.params.VendorTextColor.A + ")' href='" + a.params.VendorSite + "' target='_blank'>" + n + "</a>" } catch (e) { } return t }, youtubeModalWindowSizes: function () { if (t("#youtube_fullscreen:visible").length > 0) { var n = a.additionalButtonFunctions.getFancyboxMargins(), e = t(".fancybox-title").first().height(), i = { width: window.innerWidth - n[1] - n[3], height: window.innerHeight - n[0] - n[2] - e }; t("#fullscreen_probtn .fancybox-wrap").css(i), t("#fullscreen_probtn .fancybox-wrap").css({ "margin-left": n[3], "margin-right": n[1], "margin-top": n[0], "margin-bottom": n[2] }), t("#fullscreen_probtn .fancybox-skin").css(i), t("#fullscreen_probtn .fancybox-outer").css(i), t("#fullscreen_probtn .fancybox-inner").css(i) } }, hideAll: function () { a.statistics.SendStatObject({ Hidded: 1 }), a.pizzabtn.hide(), a.closeButton.remove(), a.additionalButtonFunctions.hideAllActiveZones() }, checkAndCorrentButtonPosition: function () { void 0 !== a.pizzabtn && null !== a.pizzabtn && (a.pizzabtn.position().left > window.innerWidth - a.params.ButtonSize.W && a.pizzabtn.css("left", window.innerWidth - a.params.ButtonSize.W), a.pizzabtn.css("top").replace("px", "") > window.innerHeight - a.params.ButtonSize.H && a.pizzabtn.css("top", window.innerHeight - a.params.ButtonSize.H)) }, updateAllPercentSizes: function () { "iframe" !== a.params.ButtonImageType && (a.params.ButtonSize = a.additionalButtonFunctions.convertPercentButtonSize(a.params.ButtonSize), a.params.ButtonDragSize = a.additionalButtonFunctions.convertPercentButtonSize(a.params.ButtonDragSize)), a.params.CloseSize = a.additionalButtonFunctions.convertPercentButtonSize(a.params.CloseSize), a.params.CloseActiveSize = a.additionalButtonFunctions.convertPercentButtonSize(a.params.CloseActiveSize), t("#pizzabtnImg", a.pizzabtn).css({ width: a.params.ButtonSize.W, height: a.params.ButtonSize.H, opacity: a.params.ButtonOpacity }), t(a.pizzabtn).css({ width: a.params.ButtonSize.W, height: a.params.ButtonSize.H }), (null !== a.params.ActiveZones || a.params.ActiveZones.length > 0) && "button_and_active_zones" == a.params.ButtonType && t.each(a.initializedActiveZones, function (t, n) { "iframe" !== n.currentActiveZone.ButtonImageType && (n.currentActiveZone.ActiveSize = a.additionalButtonFunctions.convertPercentButtonSize(n.currentActiveZone.ActiveSize), n.currentActiveZone.InactiveSize = a.additionalButtonFunctions.convertPercentButtonSize(n.currentActiveZone.InactiveSize)) }) }, convertPercentButtonSize: function (t) { try { var n = t.W, e = t.H, i = t.W, o = t.H; try { if (void 0 !== t.Initial && null !== t.initial) { var n = t.Initial.W, e = t.Initial.H, i = t.Initial.W, o = t.Initial.H; t.W = t.Initial.W, t.H = t.Initial.H, t.Initial = {}, t.Initial.W = n, t.Initial.H = e } else t.Initial = {}, t.Initial.W = n, t.Initial.H = e } catch (r) { t.Initial = {}, t.Initial.W = n, t.Initial.H = e, a.params.Debug && console.log(r) } (-1 !== n.toString().indexOf("%") || parseFloat(n) < 0) && (parseFloat(i) < 0 && (n = Math.abs(parseFloat(n))), n = window.innerWidth * (parseFloat(n) / 100), parseFloat(o) > 0 && -1 == t.W.toString().indexOf("%") && (e = n * parseFloat(o))), (-1 !== e.toString().indexOf("%") || parseFloat(e) < 0) && (parseFloat(o) < 0 && (e = Math.abs(parseFloat(e))), e = window.innerHeight * (parseFloat(e) / 100), parseFloat(i) > 0 && -1 == t.H.toString().indexOf("%") && (n = parseFloat(i) * e)), t.W = n, t.H = e } catch (r) { } return t }, checkExistInitIframeSIze: function (t) { return "iframe" == t.currentActiveZone.ButtonImageType && t.currentActiveZone.ButtonIframeInitialSize.W > 0 && t.currentActiveZone.ButtonIframeInitialSize.H > 0 && void 0 !== t.currentActiveZone.ButtonIframeInitialSize.W && null !== t.currentActiveZone.ButtonIframeInitialSize.W && void 0 !== t.currentActiveZone.ButtonIframeInitialSize.H && null !== t.currentActiveZone.ButtonIframeInitialSize.H }, applyIframeScale: function (t, n, e) { if (n.W > 0 && n.H > 0 && void 0 !== n.W && null !== n.W && void 0 !== n.H && null !== n.H) { var i = e.W / n.W, o = e.H / n.H; t.css("width", n.W), t.css("height", n.H), a.additionalButtonFunctions.setTransform(t, i, o) } }, setTransform: function (t, n, e) { t.css({ transform: "scale(" + n + "," + e + ")", "-moz-transform": "scale(" + n + "," + e + ")", "-webkit-transform": "scale(" + n + "," + e + ")", "-o-transform": "scale(" + n + "," + e + ")", "-ms-transform": "scale(" + n + "," + e + ")" }), t.css("transform-origin", "top left"), t.css("-moz-transform-origin", "top left"), t.css("-webkit-transform-origin", "top left"), t.css("-o-transform-origin", "top left"), t.css("-ms-transform-origin", "top left") }, replaceRandom: function (t) { return t.replace(/\[RANDOM\]/g, a.additionalButtonFunctions.randomString(12)) }, hideAllActiveZones: function () { try { t.each(a.initializedActiveZones, function (t, n) { n.hide() }) } catch (n) { } }, getContentUrlWithUtm: function (t) { try { if (a.params.isAddUtmSource) { var n = window.location.href; a.params.UtmSourceUseOnlyDomain && (n = a.realDomain), "" !== a.params.UtmSource && (n = a.params.UtmSource), t = a.additionalButtonFunctions.replaceUrlParam(t, "utm_source", n), "" !== a.params.UtmCampaign && null !== a.params.UtmCampaign && void 0 !== a.params.UtmCampaign && (t = a.additionalButtonFunctions.replaceUrlParam(t, "utm_campaign", a.params.UtmCampaign)), a.params.Debug && console.log("newpath - " + t) } } catch (e) { a.params.Debug && console.log(e) } return t }, testSpeed: function (t) { if (a.params.isTestSpeed) { var n = "https://cdn.probtn.com/load2.png", e = 339234; measureSpeedByImage = function () { function i() { var n = (r - o) / 1e3, i = 8 * e, s = (i / n).toFixed(2), c = (s / 1024).toFixed(2), l = (c / 1024).toFixed(2), p = "Your connection speed is: \n\r" + s + " bps\n\r" + c + " kbps\n\r" + l + " Mbps\n\r"; a.params.Debug && console.log(p), null !== t && void 0 !== t && t(c) } var o, r, s = new Image; s.onload = function () { r = (new Date).getTime(), i() }, s.onerror = function (t) { a.params.Debug && console.log(t) }, o = (new Date).getTime(); var c = "?nnn=" + o; s.src = n + c }, setTimeout(measureSpeedByImage, 1) } else null !== t && void 0 !== t && t(0) }, preloadImage: function (n) { var e = n, i = t("<img/>", { id: "probtn_ClickCounterLink_" + a.additionalButtonFunctions.randomString(12), src: e, style: "width: 1px; height: 1px; position: absolute; left: -10001px; top: -10001px;" }).prependTo("body"); t(i).attr("src", e) }, sendMessageToParent: function (t) { (null == t || void 0 == t) && (t = "probtn_end_move"), a.additionalButtonFunctions.sendCustomMessageToParent({ type: t, params: a.params, button: a.pizzabtn.position() }) }, sendCustomMessageToParent: function (t) { 1 == a.params.ControlInIframeFromParent && window.self !== window.top && window.top.postMessage(t, "*") }, getWindowHeight: function () { return 1 == a.params.ControlInIframeFromParent && a.params.ParentParams.height > 0 && void 0 !== a.params.ParentParams.height && null !== a.params.ParentParams.height ? a.params.ParentParams.height : window.innerHeight }, getWindowWidth: function () { return 1 == a.params.ControlInIframeFromParent && a.params.ParentParams.width > 0 && void 0 !== a.params.ParentParams.width && null !== a.params.ParentParams.width ? a.params.ParentParams.width : window.innerWidth }, replaceUrlParam: function (t, n, e) { var i = new RegExp("(\\?|\\&)(" + n + "=).*?(&|$)"), a = t; return a = t.search(i) >= 0 ? t.replace(i, "$1$2" + e + "$3") : a + (a.indexOf("?") > 0 ? "&" : "?") + n + "=" + e }, onOrientationChange: function () { try { a.additionalButtonFunctions.updateAllPercentSizes(), a.additionalButtonFunctions.checkAndCorrentButtonPosition(); try { a.closeButton.center() } catch (n) { a.params.Debug && console.log(n) } "youtube" == a.params.ButtonContentType && a.additionalButtonFunctions.youtubeModalWindowSizes(), "menu" == a.params.ButtonType && t("#probtn_menu").length > 0 && (a.additionalButtonFunctions.MaximizeWrapper(function () { }), a.pizzabtn.position().left < window.innerWidth - a.params.ButtonSize.W && a.pizzabtn.css("left", "0px"), a.pizzabtn.position().top < window.innerHeight - a.params.ButtonSize.H && a.pizzabtn.css("top", window.innerHeight - a.params.ButtonSize.H), t("#probtn_menu").css("top", window.innerHeight - t("#probtn_menu").height() - a.params.ButtonSize.H), t("#probtn_menu").css("left", 0)) } catch (n) { } var e = !1; try { void 0 !== t.fancybox && (e = t.fancybox.isOpen) } catch (n) { } if ((void 0 !== t.fancybox || "fullscreen" == a.params.ButtonType) && (e || "fullscreen" == a.params.ButtonType)) { var i = a.params.ContentSize.X, o = a.params.ContentSize.Y, r = a.additionalButtonFunctions.getFancyboxMargins(), s = window.innerWidth - r[1] - r[3], c = window.innerHeight - r[0] - r[2]; a.params.IsManualSize === !0 ? (-1 !== a.params.ContentSize.X.indexOf("%") ? (s = window.innerWidth * (parseFloat(a.params.ContentSize.X) / 100), i = parseFloat(a.params.ContentSize.X) / 100) : s = a.params.ContentSize.X, -1 !== a.params.ContentSize.Y.indexOf("%") ? (c = window.innerHeight * (parseFloat(a.params.ContentSize.Y) / 100), o = parseFloat(a.params.ContentSize.Y) / 100) : c = a.params.ContentSize.Y) : (c = a.params.ContentSize.H, s = a.params.ContentSize.W), c = c - r[0] - r[2], s = s - r[1] - r[3]; var l = function () { t(".fancybox-wrap").width(s), t(".fancybox-wrap").height(c), t(".fancybox-inner").width(s), t(".fancybox-inner").height(p), "fullscreen" == a.params.ButtonType && (t(".fancybox-wrap").css("left", r[1]), t(".fancybox-wrap").css("top", r[0]), t(".fancybox-wrap").css("bottom", r[2]), t(".fancybox-wrap").css("right", r[3])), a.additionalButtonFunctions.setIfameSizes() }, p = (s - t(".fancybox-title").width(), c - t(".fancybox-title").height()); if (l(), s > c) var d = t(".fancybox-inner").height(), u = d / a.params.VideoSize.Y * a.params.VideoSize.X; else var u = t(".fancybox-inner").width(), d = d / a.params.VideoSize.X * a.params.VideoSize.Y; t(".probtn_video_wrapper2").width(t(".fancybox-inner").width()), t(".probtn_video_wrapper2").height(t(".fancybox-inner").height()), t(".probtn_video").width(u), t(".probtn_video").height(d), l() } }, changeBodySize: function () { var n = { width: window.availWidth, height: window.availHeight }; "Microsoft Internet Explorer" === a.userData.browser && (n.overflow = "auto"); try { t("body").css(n) } catch (e) { } }, MinimizeWrapper: function (n, e) { function i() { var n = void 0; n = t("#probtn_wrapper"); var e = { width: "auto", height: "auto", position: "fixed" }; a.additionalButtonFunctions.sendMessageToParent("probtn_end_move"); try { t.pep.toggleAll(!1), n.css(e), t.pep.toggleAll(!0) } catch (i) { n.css(e) } null !== o && void 0 !== o && o() } var o = n; null !== e ? setTimeout(i, e) : i() }, MaximizeWrapper: function (n) { var e = void 0; e = t("#probtn_wrapper"); var i = { width: window.innerWidth, height: window.innerHeight, position: "fixed" }; a.additionalButtonFunctions.sendMessageToParent("probtn_start_move"), e.css(i); try { var o = 0; if (o = t(window).scrollLeft(), a.pizzabtn.offset().left - o > e.width()) { var r = e.width() - a.pizzabtn.width(); a.pizzabtn.css({ left: r + "px" }) } } catch (s) { } try { var c = 0; if (c = t(window).scrollTop(), a.pizzabtn.offset().top - c > e.height()) { var l = e.height() - a.pizzabtn.height(); a.pizzabtn.css({ top: l + "px" }) } } catch (s) { } try { n() } catch (s) { } }, animation: { animationRuning: !1, checkAndRunAnimation: function () { setTimeout(function () { if ("anim1" == a.params.isAnimation || "anim2" == a.params.isAnimation) { { a.pizzabtn.position().left, a.pizzabtn.position().top } a.additionalButtonFunctions.animation.animationRuning = !0, a.additionalButtonFunctions.MaximizeWrapper(function () { var n = 0; a.pizzabtn.animate({ top: window.innerHeight - a.pizzabtn.height(), left: t("body").innerWidth() - a.pizzabtn.width() }, { duration: a.params.animationDuration, step: function (e) { a.userData.mobile ? n += 2 : n = e, "anim2" == a.params.isAnimation ? (n = -n, t(this).css(a.additionalButtonFunctions.animation.getRotationCss(n, "60% 50%"))) : t(this).css(a.additionalButtonFunctions.animation.getRotationCss(n)) }, complete: a.additionalButtonFunctions.animation.doneAnimation }) }) } }, 2e3) }, getRotationCss: function (t, n) { return null == n && void 0 == n && (n = "50% 50%"), { transform: "rotate(" + t + "deg)", "-webkit-transform": "rotate(" + t + "deg)", "-moz-transform": "rotate(" + t + "deg)", "-ms-transform": "rotate(" + t + "deg)", "-o-transform": "rotate(" + t + "deg)", "-webkit-transform-origin": n, "-moz-transform-origin": n, "-ms-transform-origin": n, "-o-transform-origin": n, "transform-origin": n } }, doneAnimation: function () { a.pizzabtn.css(a.additionalButtonFunctions.animation.getRotationCss(0)), a.additionalButtonFunctions.animation.animationRuning = !1, "" != a.params.ButtonAnimationDoneImage && void 0 != a.params.ButtonAnimationDoneImage && (a.params.ButtonImage = a.params.ButtonAnimationDoneImage, t("#pizzabtnImg", a.pizzabtn).attr("src", a.params.ButtonAnimationDoneImage)), a.additionalButtonFunctions.MinimizeWrapper() } }, getCurrentActiveArea: function (t) { if ((null !== a.params.ActiveZones || a.params.ActiveZones.length > 0) && "button_and_active_zones" == a.params.ButtonType) { for (var n = 0; n < a.params.ActiveZones.length; n++) { var e = a.params.ActiveZones[n]; if (e.Name == t) return e } return null } return null }, randomString: function (t) { return Math.round(Math.pow(36, t + 1) - Math.random() * Math.pow(36, t)).toString(36).slice(1) }, isLandscape: function () { return window.innerWidth > window.innerHeight }, getFancyboxMargins: function () { if (a.params.ContentInsets.T < 0 || a.params.ContentInsets.B < 0 || a.params.ContentInsets.L < 0 || a.params.ContentInsets.R < 0) { var t = a.additionalButtonFunctions.isLandscape() && a.userData.mobile, n = t ? [a.params.ButtonSize.H / 4, a.params.ButtonSize.H / 4 + 5, a.params.ButtonSize.H / 4, a.params.ButtonSize.H / 4 + 5] : [a.params.ButtonSize.H + 5, a.params.ButtonSize.H / 2, a.params.ButtonSize.H + 5, a.params.ButtonSize.H / 2]; a.userData.mobile && a.params.ButtonSize.H > 70 ? n = [a.params.ButtonSize.H / 8, a.params.ButtonSize.H / 8, a.params.ButtonSize.H / 8, a.params.ButtonSize.H / 8] : a.params.ButtonSize.H > 70 && (n = [70, 70, 70, 70]) } else var n = [a.params.ContentInsets.T, a.params.ContentInsets.R, a.params.ContentInsets.B, a.params.ContentInsets.L]; return n }, setIfameSizes: function () {
                        a.userData.mobile, 0 !== a.params.iframeScaleMinWidth && a.params.iframeScaleMinWidth > t(".fancybox-inner").first().width() && (a.params.iframeScale = t(".fancybox-inner").first().width() / a.params.iframeScaleMinWidth, t(".fancybox-iframe").first().css("margin-bottom", "-5000px"), t(".fancybox-iframe").css("margin-bottom", "-5000px"));
                        var n = function (n) { t(".fancybox-iframe").first().css("transform", "scale(" + n + ")"), t(".fancybox-iframe").first().css("-moz-transform", "scale(" + n + ")"), t(".fancybox-iframe").first().css("-webkit-transform", "scale(" + n + ")"), t(".fancybox-iframe").first().css("-o-transform", "scale(" + n + ")"), t(".fancybox-iframe").first().css("-ms-transform", "scale(" + n + ")"), t(".fancybox-iframe").first().css("transform-origin", "top left"), t(".fancybox-iframe").first().css("-webkit-transform-origin", "top left"), t(".fancybox-iframe").first().css("-moz-transform-origin", "top left"), t(".fancybox-iframe").first().width(t(".fancybox-inner").first().width() / n), t(".fancybox-iframe").first().height(t(".fancybox-inner").first().height() / n) }; if (1 !== a.params.iframeScale) n(a.params.iframeScale); else switch (a.parsed_ua.ua_device_type) { case "mobile": 1 !== a.params.iframeScaleMobile && void 0 !== a.params.iframeScaleMobile && null !== a.params.iframeScaleMobile && n(a.params.iframeScaleMobile); break; case "tablet": 1 !== a.params.iframeScaleTablet && void 0 !== a.params.iframeScaleTablet && null !== a.params.iframeScaleTablet && n(a.params.iframeScaleTablet); break; default: 1 !== a.params.iframeScaleDesktop && void 0 !== a.params.iframeScaleDesktop && null !== a.params.iframeScaleDesktop && n(a.params.iframeScaleDesktop) }
                    }
                }
            }; a.userDataFunction(), window.probtn_ButtonContentType = null, a.HpmdFunctions.probtnHpmdTrack(1), t(window).bind("load", function () { a.params.Debug && console.log("windows bind load"), a.allButtonInit === !1 && (a.allButtonInit = !0, e()) }), a.HpmdFunctions.probtnHpmdTrack(1), setTimeout(function () { a.params.Debug && console.log("setTimeout"), a.allButtonInit === !1 && (a.allButtonInit = !0, e()) }, 2e3)
        }
    }(jQuery);
    
        jQuery(document).StartButton({
            isHPMD: isHPMD,
            hpmd: window.probtn_hpmd,
            domain: domain,
            mainStyleCss: mainStyleCssPath,
            fancyboxCssPath: fancyboxCssPath,
            fancyboxJsPath: fancyboxPath,
            jqueryPepPath: jquerypepPath
        })
    //})
}

var loadFancybox = function (jQuery1) {
    var jQuery = jQuery1;

    var fancyboxFunction = null;
    try {
        fancyboxFunction = jQuery.fancybox;
        if ((fancyboxFunction!==null) && (fancyboxFunction!==undefined)) {
            fancyboxFunction = jQuery.fancybox.open;
        }
    } catch (ex) {
    }

    var mo_domain = document.domain.replace("www.", "");
    var mo_not_load_fb = ( mo_domain && mo_domain.indexOf('maximonline.ru') >= 0 );

    if (typeof fancyboxFunction == 'function' || mo_not_load_fb) {
        console.log('includepb, loading probtn no fancybox');
        loadProbtn(jQuery);
    } else {
        console.log('includepb, loading fancybox');
        console.log(jQuery);
        /*jQuery.getScript(fancyboxPath, function () {
            loadProbtn(jQuery);
        })*/

        /*! fancyBox v2.1.5 fancyapps.com | fancyapps.com/fancybox/#license */(function (window, document, $, undefined) { var H = $("html"), W = $(window), D = $(document), F = $.fancybox = function () { F.open.apply(this, arguments) }, IE = navigator.userAgent.match(/msie/i), didUpdate = null, isTouch = document.createTouch !== undefined, isQuery = function (obj) { return obj && obj.hasOwnProperty && obj instanceof $ }, isString = function (str) { return str && $.type(str) === "string" }, isPercentage = function (str) { return isString(str) && str.indexOf("%") > 0 }, isScrollable = function (el) { return (el && !(el.style.overflow && el.style.overflow === "hidden") && ((el.clientWidth && el.scrollWidth > el.clientWidth) || (el.clientHeight && el.scrollHeight > el.clientHeight))) }, getScalar = function (orig, dim) { var value = parseInt(orig, 10) || 0; if (dim && isPercentage(orig)) { value = F.getViewport()[dim] / 100 * value } return Math.ceil(value) }, getValue = function (value, dim) { return getScalar(value, dim) + "px" }; $.extend(F, { version: "2.1.5", defaults: { padding: 15, margin: 20, width: 800, height: 600, minWidth: 100, minHeight: 100, maxWidth: 9999, maxHeight: 9999, pixelRatio: 1, autoSize: true, autoHeight: false, autoWidth: false, autoResize: true, autoCenter: !isTouch, fitToView: true, aspectRatio: false, topRatio: 0.5, leftRatio: 0.5, scrolling: "auto", wrapCSS: "", arrows: true, closeBtn: true, closeClick: false, nextClick: false, mouseWheel: true, autoPlay: false, playSpeed: 3000, preload: 3, modal: false, loop: true, ajax: { dataType: "html", headers: { "X-fancyBox": true } }, iframe: { scrolling: "auto", preload: true }, swf: { wmode: "transparent", allowfullscreen: "true", allowscriptaccess: "always" }, keys: { next: { 13: "left", 34: "up", 39: "left", 40: "up" }, prev: { 8: "right", 33: "down", 37: "right", 38: "down" }, close: [27], play: [32], toggle: [70] }, direction: { next: "left", prev: "right" }, scrollOutside: true, index: 0, type: null, href: null, content: null, title: null, tpl: { wrap: '<div class="fancybox-wrap" tabIndex="-1"><div class="fancybox-skin"><div class="fancybox-outer"><div class="fancybox-inner"></div></div></div></div>', image: '<img class="fancybox-image" src="{href}" alt="" />', iframe: '<iframe id="fancybox-frame{rnd}" name="fancybox-frame{rnd}" class="fancybox-iframe" frameborder="0" vspace="0" hspace="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen' + (IE ? ' allowtransparency="true"' : "") + "></iframe>", error: '<p class="fancybox-error">The requested content cannot be loaded.<br/>Please try again later.</p>', closeBtn: '<a title="Close" class="fancybox-item fancybox-close" href="javascript:;"></a>', next: '<a title="Next" class="fancybox-nav fancybox-next" href="javascript:;"><span></span></a>', prev: '<a title="Previous" class="fancybox-nav fancybox-prev" href="javascript:;"><span></span></a>' }, openEffect: "fade", openSpeed: 250, openEasing: "swing", openOpacity: true, openMethod: "zoomIn", closeEffect: "fade", closeSpeed: 250, closeEasing: "swing", closeOpacity: true, closeMethod: "zoomOut", nextEffect: "elastic", nextSpeed: 250, nextEasing: "swing", nextMethod: "changeIn", prevEffect: "elastic", prevSpeed: 250, prevEasing: "swing", prevMethod: "changeOut", helpers: { overlay: true, title: true }, onCancel: $.noop, beforeLoad: $.noop, afterLoad: $.noop, beforeShow: $.noop, afterShow: $.noop, beforeChange: $.noop, beforeClose: $.noop, afterClose: $.noop }, group: {}, opts: {}, previous: null, coming: null, current: null, isActive: false, isOpen: false, isOpened: false, wrap: null, skin: null, outer: null, inner: null, player: { timer: null, isActive: false }, ajaxLoad: null, imgPreload: null, transitions: {}, helpers: {}, open: function (group, opts) { if (!group) { return } if (!$.isPlainObject(opts)) { opts = {} } if (false === F.close(true)) { return } if (!$.isArray(group)) { group = isQuery(group) ? $(group).get() : [group] } $.each(group, function (i, element) { var obj = {}, href, title, content, type, rez, hrefParts, selector; if ($.type(element) === "object") { if (element.nodeType) { element = $(element) } if (isQuery(element)) { obj = { href: element.data("fancybox-href") || element.attr("href"), title: element.data("fancybox-title") || element.attr("title"), isDom: true, element: element }; if ($.metadata) { $.extend(true, obj, element.metadata()) } } else { obj = element } } href = opts.href || obj.href || (isString(element) ? element : null); title = opts.title !== undefined ? opts.title : obj.title || ""; content = opts.content || obj.content; type = content ? "html" : (opts.type || obj.type); if (!type && obj.isDom) { type = element.data("fancybox-type"); if (!type) { rez = element.prop("class").match(/fancybox\.(\w+)/); type = rez ? rez[1] : null } } if (isString(href)) { if (!type) { if (F.isImage(href)) { type = "image" } else { if (F.isSWF(href)) { type = "swf" } else { if (href.charAt(0) === "#") { type = "inline" } else { if (isString(element)) { type = "html"; content = element } } } } } if (type === "ajax") { hrefParts = href.split(/\s+/, 2); href = hrefParts.shift(); selector = hrefParts.shift() } } if (!content) { if (type === "inline") { if (href) { content = $(isString(href) ? href.replace(/.*(?=#[^\s]+$)/, "") : href) } else { if (obj.isDom) { content = element } } } else { if (type === "html") { content = href } else { if (!type && !href && obj.isDom) { type = "inline"; content = element } } } } $.extend(obj, { href: href, type: type, content: content, title: title, selector: selector }); group[i] = obj }); F.opts = $.extend(true, {}, F.defaults, opts); if (opts.keys !== undefined) { F.opts.keys = opts.keys ? $.extend({}, F.defaults.keys, opts.keys) : false } F.group = group; return F._start(F.opts.index) }, cancel: function () { var coming = F.coming; if (!coming || false === F.trigger("onCancel")) { return } F.hideLoading(); if (F.ajaxLoad) { F.ajaxLoad.abort() } F.ajaxLoad = null; if (F.imgPreload) { F.imgPreload.onload = F.imgPreload.onerror = null } if (coming.wrap) { coming.wrap.stop(true, true).trigger("onReset").remove() } F.coming = null; if (!F.current) { F._afterZoomOut(coming) } }, close: function (event) { F.cancel(); if (false === F.trigger("beforeClose")) { return } F.unbindEvents(); if (!F.isActive) { return } if (!F.isOpen || event === true) { $(".fancybox-wrap").stop(true).trigger("onReset").remove(); F._afterZoomOut() } else { F.isOpen = F.isOpened = false; F.isClosing = true; $(".fancybox-item, .fancybox-nav").remove(); F.wrap.stop(true, true).removeClass("fancybox-opened"); F.transitions[F.current.closeMethod]() } }, play: function (action) { var clear = function () { clearTimeout(F.player.timer) }, set = function () { clear(); if (F.current && F.player.isActive) { F.player.timer = setTimeout(F.next, F.current.playSpeed) } }, stop = function () { clear(); D.unbind(".player"); F.player.isActive = false; F.trigger("onPlayEnd") }, start = function () { if (F.current && (F.current.loop || F.current.index < F.group.length - 1)) { F.player.isActive = true; D.bind({ "onCancel.player beforeClose.player": stop, "onUpdate.player": set, "beforeLoad.player": clear }); set(); F.trigger("onPlayStart") } }; if (action === true || (!F.player.isActive && action !== false)) { start() } else { stop() } }, next: function (direction) { var current = F.current; if (current) { if (!isString(direction)) { direction = current.direction.next } F.jumpto(current.index + 1, direction, "next") } }, prev: function (direction) { var current = F.current; if (current) { if (!isString(direction)) { direction = current.direction.prev } F.jumpto(current.index - 1, direction, "prev") } }, jumpto: function (index, direction, router) { var current = F.current; if (!current) { return } index = getScalar(index); F.direction = direction || current.direction[(index >= current.index ? "next" : "prev")]; F.router = router || "jumpto"; if (current.loop) { if (index < 0) { index = current.group.length + (index % current.group.length) } index = index % current.group.length } if (current.group[index] !== undefined) { F.cancel(); F._start(index) } }, reposition: function (e, onlyAbsolute) { var current = F.current, wrap = current ? current.wrap : null, pos; if (wrap) { pos = F._getPosition(onlyAbsolute); if (e && e.type === "scroll") { delete pos.position; wrap.stop(true, true).animate(pos, 200) } else { wrap.css(pos); current.pos = $.extend({}, current.dim, pos) } } }, update: function (e) { var type = (e && e.type), anyway = !type || type === "orientationchange"; if (anyway) { clearTimeout(didUpdate); didUpdate = null } if (!F.isOpen || didUpdate) { return } didUpdate = setTimeout(function () { var current = F.current; if (!current || F.isClosing) { return } F.wrap.removeClass("fancybox-tmp"); if (anyway || type === "load" || (type === "resize" && current.autoResize)) { F._setDimension() } if (!(type === "scroll" && current.canShrink)) { F.reposition(e) } F.trigger("onUpdate"); didUpdate = null }, (anyway && !isTouch ? 0 : 300)) }, toggle: function (action) { if (F.isOpen) { F.current.fitToView = $.type(action) === "boolean" ? action : !F.current.fitToView; if (isTouch) { F.wrap.removeAttr("style").addClass("fancybox-tmp"); F.trigger("onUpdate") } F.update() } }, hideLoading: function () { D.unbind(".loading"); $("#fancybox-loading").remove() }, showLoading: function () { var el, viewport; F.hideLoading(); el = $('<div id="fancybox-loading"><div></div></div>').click(F.cancel).appendTo("body"); D.bind("keydown.loading", function (e) { if ((e.which || e.keyCode) === 27) { e.preventDefault(); F.cancel() } }); if (!F.defaults.fixed) { viewport = F.getViewport(); el.css({ position: "absolute", top: (viewport.h * 0.5) + viewport.y, left: (viewport.w * 0.5) + viewport.x }) } }, getViewport: function () { var locked = (F.current && F.current.locked) || false, rez = { x: W.scrollLeft(), y: W.scrollTop() }; if (locked) { rez.w = locked[0].clientWidth; rez.h = locked[0].clientHeight } else { rez.w = isTouch && window.innerWidth ? window.innerWidth : W.width(); rez.h = isTouch && window.innerHeight ? window.innerHeight : W.height() } return rez }, unbindEvents: function () { if (F.wrap && isQuery(F.wrap)) { F.wrap.unbind(".fb") } D.unbind(".fb"); W.unbind(".fb") }, bindEvents: function () { var current = F.current, keys; if (!current) { return } W.bind("orientationchange.fb" + (isTouch ? "" : " resize.fb") + (current.autoCenter && !current.locked ? " scroll.fb" : ""), F.update); keys = current.keys; if (keys) { D.bind("keydown.fb", function (e) { var code = e.which || e.keyCode, target = e.target || e.srcElement; if (code === 27 && F.coming) { return false } if (!e.ctrlKey && !e.altKey && !e.shiftKey && !e.metaKey && !(target && (target.type || $(target).is("[contenteditable]")))) { $.each(keys, function (i, val) { if (current.group.length > 1 && val[code] !== undefined) { F[i](val[code]); e.preventDefault(); return false } if ($.inArray(code, val) > -1) { F[i](); e.preventDefault(); return false } }) } }) } if ($.fn.mousewheel && current.mouseWheel) { F.wrap.bind("mousewheel.fb", function (e, delta, deltaX, deltaY) { var target = e.target || null, parent = $(target), canScroll = false; while (parent.length) { if (canScroll || parent.is(".fancybox-skin") || parent.is(".fancybox-wrap")) { break } canScroll = isScrollable(parent[0]); parent = $(parent).parent() } if (delta !== 0 && !canScroll) { if (F.group.length > 1 && !current.canShrink) { if (deltaY > 0 || deltaX > 0) { F.prev(deltaY > 0 ? "down" : "left") } else { if (deltaY < 0 || deltaX < 0) { F.next(deltaY < 0 ? "up" : "right") } } e.preventDefault() } } }) } }, trigger: function (event, o) { var ret, obj = o || F.coming || F.current; if (!obj) { return } if ($.isFunction(obj[event])) { ret = obj[event].apply(obj, Array.prototype.slice.call(arguments, 1)) } if (ret === false) { return false } if (obj.helpers) { $.each(obj.helpers, function (helper, opts) { if (opts && F.helpers[helper] && $.isFunction(F.helpers[helper][event])) { F.helpers[helper][event]($.extend(true, {}, F.helpers[helper].defaults, opts), obj) } }) } D.trigger(event) }, isImage: function (str) { return isString(str) && str.match(/(^data:image\/.*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp|svg)((\?|#).*)?$)/i) }, isSWF: function (str) { return isString(str) && str.match(/\.(swf)((\?|#).*)?$/i) }, _start: function (index) { var coming = {}, obj, href, type, margin, padding; index = getScalar(index); obj = F.group[index] || null; if (!obj) { return false } coming = $.extend(true, {}, F.opts, obj); margin = coming.margin; padding = coming.padding; if ($.type(margin) === "number") { coming.margin = [margin, margin, margin, margin] } if ($.type(padding) === "number") { coming.padding = [padding, padding, padding, padding] } if (coming.modal) { $.extend(true, coming, { closeBtn: false, closeClick: false, nextClick: false, arrows: false, mouseWheel: false, keys: null, helpers: { overlay: { closeClick: false } } }) } if (coming.autoSize) { coming.autoWidth = coming.autoHeight = true } if (coming.width === "auto") { coming.autoWidth = true } if (coming.height === "auto") { coming.autoHeight = true } coming.group = F.group; coming.index = index; F.coming = coming; if (false === F.trigger("beforeLoad")) { F.coming = null; return } type = coming.type; href = coming.href; if (!type) { F.coming = null; if (F.current && F.router && F.router !== "jumpto") { F.current.index = index; return F[F.router](F.direction) } return false } F.isActive = true; if (type === "image" || type === "swf") { coming.autoHeight = coming.autoWidth = false; coming.scrolling = "visible" } if (type === "image") { coming.aspectRatio = true } if (type === "iframe" && isTouch) { coming.scrolling = "scroll" } coming.wrap = $(coming.tpl.wrap).addClass("fancybox-" + (isTouch ? "mobile" : "desktop") + " fancybox-type-" + type + " fancybox-tmp " + coming.wrapCSS).appendTo(coming.parent || "body"); $.extend(coming, { skin: $(".fancybox-skin", coming.wrap), outer: $(".fancybox-outer", coming.wrap), inner: $(".fancybox-inner", coming.wrap) }); $.each(["Top", "Right", "Bottom", "Left"], function (i, v) { coming.skin.css("padding" + v, getValue(coming.padding[i])) }); F.trigger("onReady"); if (type === "inline" || type === "html") { if (!coming.content || !coming.content.length) { return F._error("content") } } else { if (!href) { return F._error("href") } } if (type === "image") { F._loadImage() } else { if (type === "ajax") { F._loadAjax() } else { if (type === "iframe") { F._loadIframe() } else { F._afterLoad() } } } }, _error: function (type) { $.extend(F.coming, { type: "html", autoWidth: true, autoHeight: true, minWidth: 0, minHeight: 0, scrolling: "no", hasError: type, content: F.coming.tpl.error }); F._afterLoad() }, _loadImage: function () { var img = F.imgPreload = new Image(); img.onload = function () { this.onload = this.onerror = null; F.coming.width = this.width / F.opts.pixelRatio; F.coming.height = this.height / F.opts.pixelRatio; F._afterLoad() }; img.onerror = function () { this.onload = this.onerror = null; F._error("image") }; img.src = F.coming.href; if (img.complete !== true) { F.showLoading() } }, _loadAjax: function () { var coming = F.coming; F.showLoading(); F.ajaxLoad = $.ajax($.extend({}, coming.ajax, { url: coming.href, error: function (jqXHR, textStatus) { if (F.coming && textStatus !== "abort") { F._error("ajax", jqXHR) } else { F.hideLoading() } }, success: function (data, textStatus) { if (textStatus === "success") { coming.content = data; F._afterLoad() } } })) }, _loadIframe: function () { var coming = F.coming, iframe = $(coming.tpl.iframe.replace(/\{rnd\}/g, new Date().getTime())).attr("scrolling", isTouch ? "auto" : coming.iframe.scrolling).attr("src", coming.href); $(coming.wrap).bind("onReset", function () { try { $(this).find("iframe").hide().attr("src", "//about:blank").end().empty() } catch (e) { } }); if (coming.iframe.preload) { F.showLoading(); iframe.one("load", function () { $(this).data("ready", 1); if (!isTouch) { $(this).bind("load.fb", F.update) } $(this).parents(".fancybox-wrap").width("100%").removeClass("fancybox-tmp").show(); F._afterLoad() }) } coming.content = iframe.appendTo(coming.inner); if (!coming.iframe.preload) { F._afterLoad() } }, _preloadImages: function () { var group = F.group, current = F.current, len = group.length, cnt = current.preload ? Math.min(current.preload, len - 1) : 0, item, i; for (i = 1; i <= cnt; i += 1) { item = group[(current.index + i) % len]; if (item.type === "image" && item.href) { new Image().src = item.href } } }, _afterLoad: function () { var coming = F.coming, previous = F.current, placeholder = "fancybox-placeholder", current, content, type, scrolling, href, embed; F.hideLoading(); if (!coming || F.isActive === false) { return } if (false === F.trigger("afterLoad", coming, previous)) { coming.wrap.stop(true).trigger("onReset").remove(); F.coming = null; return } if (previous) { F.trigger("beforeChange", previous); previous.wrap.stop(true).removeClass("fancybox-opened").find(".fancybox-item, .fancybox-nav").remove() } F.unbindEvents(); current = coming; content = coming.content; type = coming.type; scrolling = coming.scrolling; $.extend(F, { wrap: current.wrap, skin: current.skin, outer: current.outer, inner: current.inner, current: current, previous: previous }); href = current.href; switch (type) { case "inline": case "ajax": case "html": if (current.selector) { content = $("<div>").html(content).find(current.selector) } else { if (isQuery(content)) { if (!content.data(placeholder)) { content.data(placeholder, $('<div class="' + placeholder + '"></div>').insertAfter(content).hide()) } content = content.show().detach(); current.wrap.bind("onReset", function () { if ($(this).find(content).length) { content.hide().replaceAll(content.data(placeholder)).data(placeholder, false) } }) } } break; case "image": content = current.tpl.image.replace("{href}", href); break; case "swf": content = '<object id="fancybox-swf" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="100%" height="100%"><param name="movie" value="' + href + '"></param>'; embed = ""; $.each(current.swf, function (name, val) { content += '<param name="' + name + '" value="' + val + '"></param>'; embed += " " + name + '="' + val + '"' }); content += '<embed src="' + href + '" type="application/x-shockwave-flash" width="100%" height="100%"' + embed + "></embed></object>"; break } if (!(isQuery(content) && content.parent().is(current.inner))) { current.inner.append(content) } F.trigger("beforeShow"); current.inner.css("overflow", scrolling === "yes" ? "scroll" : (scrolling === "no" ? "hidden" : scrolling)); F._setDimension(); F.reposition(); F.isOpen = false; F.coming = null; F.bindEvents(); if (!F.isOpened) { $(".fancybox-wrap").not(current.wrap).stop(true).trigger("onReset").remove() } else { if (previous.prevMethod) { F.transitions[previous.prevMethod]() } } F.transitions[F.isOpened ? current.nextMethod : current.openMethod](); F._preloadImages() }, _setDimension: function () { var viewport = F.getViewport(), steps = 0, canShrink = false, canExpand = false, wrap = F.wrap, skin = F.skin, inner = F.inner, current = F.current, width = current.width, height = current.height, minWidth = current.minWidth, minHeight = current.minHeight, maxWidth = current.maxWidth, maxHeight = current.maxHeight, scrolling = current.scrolling, scrollOut = current.scrollOutside ? current.scrollbarWidth : 0, margin = current.margin, wMargin = getScalar(margin[1] + margin[3]), hMargin = getScalar(margin[0] + margin[2]), wPadding, hPadding, wSpace, hSpace, origWidth, origHeight, origMaxWidth, origMaxHeight, ratio, width_, height_, maxWidth_, maxHeight_, iframe, body; wrap.add(skin).add(inner).width("auto").height("auto").removeClass("fancybox-tmp"); wPadding = getScalar(skin.outerWidth(true) - skin.width()); hPadding = getScalar(skin.outerHeight(true) - skin.height()); wSpace = wMargin + wPadding; hSpace = hMargin + hPadding; origWidth = isPercentage(width) ? (viewport.w - wSpace) * getScalar(width) / 100 : width; origHeight = isPercentage(height) ? (viewport.h - hSpace) * getScalar(height) / 100 : height; if (current.type === "iframe") { iframe = current.content; if (current.autoHeight && iframe.data("ready") === 1) { try { if (iframe[0].contentWindow.document.location) { inner.width(origWidth).height(9999); body = iframe.contents().find("body"); if (scrollOut) { body.css("overflow-x", "hidden") } origHeight = body.outerHeight(true) } } catch (e) { } } } else { if (current.autoWidth || current.autoHeight) { inner.addClass("fancybox-tmp"); if (!current.autoWidth) { inner.width(origWidth) } if (!current.autoHeight) { inner.height(origHeight) } if (current.autoWidth) { origWidth = inner.width() } if (current.autoHeight) { origHeight = inner.height() } inner.removeClass("fancybox-tmp") } } width = getScalar(origWidth); height = getScalar(origHeight); ratio = origWidth / origHeight; minWidth = getScalar(isPercentage(minWidth) ? getScalar(minWidth, "w") - wSpace : minWidth); maxWidth = getScalar(isPercentage(maxWidth) ? getScalar(maxWidth, "w") - wSpace : maxWidth); minHeight = getScalar(isPercentage(minHeight) ? getScalar(minHeight, "h") - hSpace : minHeight); maxHeight = getScalar(isPercentage(maxHeight) ? getScalar(maxHeight, "h") - hSpace : maxHeight); origMaxWidth = maxWidth; origMaxHeight = maxHeight; if (current.fitToView) { maxWidth = Math.min(viewport.w - wSpace, maxWidth); maxHeight = Math.min(viewport.h - hSpace, maxHeight) } maxWidth_ = viewport.w - wMargin; maxHeight_ = viewport.h - hMargin; if (current.aspectRatio) { if (width > maxWidth) { width = maxWidth; height = getScalar(width / ratio) } if (height > maxHeight) { height = maxHeight; width = getScalar(height * ratio) } if (width < minWidth) { width = minWidth; height = getScalar(width / ratio) } if (height < minHeight) { height = minHeight; width = getScalar(height * ratio) } } else { width = Math.max(minWidth, Math.min(width, maxWidth)); if (current.autoHeight && current.type !== "iframe") { inner.width(width); height = inner.height() } height = Math.max(minHeight, Math.min(height, maxHeight)) } if (current.fitToView) { inner.width(width).height(height); wrap.width(width + wPadding); width_ = wrap.width(); height_ = wrap.height(); if (current.aspectRatio) { while ((width_ > maxWidth_ || height_ > maxHeight_) && width > minWidth && height > minHeight) { if (steps++ > 19) { break } height = Math.max(minHeight, Math.min(maxHeight, height - 10)); width = getScalar(height * ratio); if (width < minWidth) { width = minWidth; height = getScalar(width / ratio) } if (width > maxWidth) { width = maxWidth; height = getScalar(width / ratio) } inner.width(width).height(height); wrap.width(width + wPadding); width_ = wrap.width(); height_ = wrap.height() } } else { width = Math.max(minWidth, Math.min(width, width - (width_ - maxWidth_))); height = Math.max(minHeight, Math.min(height, height - (height_ - maxHeight_))) } } if (scrollOut && scrolling === "auto" && height < origHeight && (width + wPadding + scrollOut) < maxWidth_) { width += scrollOut } inner.width(width).height(height); wrap.width(width + wPadding); width_ = wrap.width(); height_ = wrap.height(); canShrink = (width_ > maxWidth_ || height_ > maxHeight_) && width > minWidth && height > minHeight; canExpand = current.aspectRatio ? (width < origMaxWidth && height < origMaxHeight && width < origWidth && height < origHeight) : ((width < origMaxWidth || height < origMaxHeight) && (width < origWidth || height < origHeight)); $.extend(current, { dim: { width: getValue(width_), height: getValue(height_) }, origWidth: origWidth, origHeight: origHeight, canShrink: canShrink, canExpand: canExpand, wPadding: wPadding, hPadding: hPadding, wrapSpace: height_ - skin.outerHeight(true), skinSpace: skin.height() - height }); if (!iframe && current.autoHeight && height > minHeight && height < maxHeight && !canExpand) { inner.height("auto") } }, _getPosition: function (onlyAbsolute) { var current = F.current, viewport = F.getViewport(), margin = current.margin, width = F.wrap.width() + margin[1] + margin[3], height = F.wrap.height() + margin[0] + margin[2], rez = { position: "absolute", top: margin[0], left: margin[3] }; if (current.autoCenter && current.fixed && !onlyAbsolute && height <= viewport.h && width <= viewport.w) { rez.position = "fixed" } else { if (!current.locked) { rez.top += viewport.y; rez.left += viewport.x } } rez.top = getValue(Math.max(rez.top, rez.top + ((viewport.h - height) * current.topRatio))); rez.left = getValue(Math.max(rez.left, rez.left + ((viewport.w - width) * current.leftRatio))); return rez }, _afterZoomIn: function () { var current = F.current; if (!current) { return } F.isOpen = F.isOpened = true; F.wrap.css("overflow", "visible").addClass("fancybox-opened"); F.update(); if (current.closeClick || (current.nextClick && F.group.length > 1)) { F.inner.css("cursor", "pointer").bind("click.fb", function (e) { if (!$(e.target).is("a") && !$(e.target).parent().is("a")) { e.preventDefault(); F[current.closeClick ? "close" : "next"]() } }) } if (current.closeBtn) { $(current.tpl.closeBtn).appendTo(F.skin).bind("click.fb", function (e) { e.preventDefault(); F.close() }) } if (current.arrows && F.group.length > 1) { if (current.loop || current.index > 0) { $(current.tpl.prev).appendTo(F.outer).bind("click.fb", F.prev) } if (current.loop || current.index < F.group.length - 1) { $(current.tpl.next).appendTo(F.outer).bind("click.fb", F.next) } } F.trigger("afterShow"); if (!current.loop && current.index === current.group.length - 1) { F.play(false) } else { if (F.opts.autoPlay && !F.player.isActive) { F.opts.autoPlay = false; F.play() } } }, _afterZoomOut: function (obj) { obj = obj || F.current; $(".fancybox-wrap").trigger("onReset").remove(); $.extend(F, { group: {}, opts: {}, router: false, current: null, isActive: false, isOpened: false, isOpen: false, isClosing: false, wrap: null, skin: null, outer: null, inner: null }); F.trigger("afterClose", obj) } }); F.transitions = { getOrigPosition: function () { var current = F.current, element = current.element, orig = current.orig, pos = {}, width = 50, height = 50, hPadding = current.hPadding, wPadding = current.wPadding, viewport = F.getViewport(); if (!orig && current.isDom && element.is(":visible")) { orig = element.find("img:first"); if (!orig.length) { orig = element } } if (isQuery(orig)) { pos = orig.offset(); if (orig.is("img")) { width = orig.outerWidth(); height = orig.outerHeight() } } else { pos.top = viewport.y + (viewport.h - height) * current.topRatio; pos.left = viewport.x + (viewport.w - width) * current.leftRatio } if (F.wrap.css("position") === "fixed" || current.locked) { pos.top -= viewport.y; pos.left -= viewport.x } pos = { top: getValue(pos.top - hPadding * current.topRatio), left: getValue(pos.left - wPadding * current.leftRatio), width: getValue(width + wPadding), height: getValue(height + hPadding) }; return pos }, step: function (now, fx) { var ratio, padding, value, prop = fx.prop, current = F.current, wrapSpace = current.wrapSpace, skinSpace = current.skinSpace; if (prop === "width" || prop === "height") { ratio = fx.end === fx.start ? 1 : (now - fx.start) / (fx.end - fx.start); if (F.isClosing) { ratio = 1 - ratio } padding = prop === "width" ? current.wPadding : current.hPadding; value = now - padding; F.skin[prop](getScalar(prop === "width" ? value : value - (wrapSpace * ratio))); F.inner[prop](getScalar(prop === "width" ? value : value - (wrapSpace * ratio) - (skinSpace * ratio))) } }, zoomIn: function () { var current = F.current, startPos = current.pos, effect = current.openEffect, elastic = effect === "elastic", endPos = $.extend({ opacity: 1 }, startPos); delete endPos.position; if (elastic) { startPos = this.getOrigPosition(); if (current.openOpacity) { startPos.opacity = 0.1 } } else { if (effect === "fade") { startPos.opacity = 0.1 } } F.wrap.css(startPos).animate(endPos, { duration: effect === "none" ? 0 : current.openSpeed, easing: current.openEasing, step: elastic ? this.step : null, complete: F._afterZoomIn }) }, zoomOut: function () { var current = F.current, effect = current.closeEffect, elastic = effect === "elastic", endPos = { opacity: 0.1 }; if (elastic) { endPos = this.getOrigPosition(); if (current.closeOpacity) { endPos.opacity = 0.1 } } F.wrap.animate(endPos, { duration: effect === "none" ? 0 : current.closeSpeed, easing: current.closeEasing, step: elastic ? this.step : null, complete: F._afterZoomOut }) }, changeIn: function () { var current = F.current, effect = current.nextEffect, startPos = current.pos, endPos = { opacity: 1 }, direction = F.direction, distance = 200, field; startPos.opacity = 0.1; if (effect === "elastic") { field = direction === "down" || direction === "up" ? "top" : "left"; if (direction === "down" || direction === "right") { startPos[field] = getValue(getScalar(startPos[field]) - distance); endPos[field] = "+=" + distance + "px" } else { startPos[field] = getValue(getScalar(startPos[field]) + distance); endPos[field] = "-=" + distance + "px" } } if (effect === "none") { F._afterZoomIn() } else { F.wrap.css(startPos).animate(endPos, { duration: current.nextSpeed, easing: current.nextEasing, complete: F._afterZoomIn }) } }, changeOut: function () { var previous = F.previous, effect = previous.prevEffect, endPos = { opacity: 0.1 }, direction = F.direction, distance = 200; if (effect === "elastic") { endPos[direction === "down" || direction === "up" ? "top" : "left"] = (direction === "up" || direction === "left" ? "-" : "+") + "=" + distance + "px" } previous.wrap.animate(endPos, { duration: effect === "none" ? 0 : previous.prevSpeed, easing: previous.prevEasing, complete: function () { $(this).trigger("onReset").remove() } }) } }; F.helpers.overlay = { defaults: { closeClick: true, speedOut: 200, showEarly: true, css: {}, locked: !isTouch, fixed: true }, overlay: null, fixed: false, el: $("html"), create: function (opts) { opts = $.extend({}, this.defaults, opts); if (this.overlay) { this.close() } this.overlay = $('<div class="fancybox-overlay"></div>').appendTo(F.coming ? F.coming.parent : opts.parent); this.fixed = false; if (opts.fixed && F.defaults.fixed) { this.overlay.addClass("fancybox-overlay-fixed"); this.fixed = true } }, open: function (opts) { var that = this; opts = $.extend({}, this.defaults, opts); if (this.overlay) { this.overlay.unbind(".overlay").width("auto").height("auto") } else { this.create(opts) } if (!this.fixed) { W.bind("resize.overlay", $.proxy(this.update, this)); this.update() } if (opts.closeClick) { this.overlay.bind("click.overlay", function (e) { if ($(e.target).hasClass("fancybox-overlay")) { if (F.isActive) { F.close() } else { that.close() } return false } }) } this.overlay.css(opts.css).show() }, close: function () { var scrollV, scrollH; W.unbind("resize.overlay"); if (this.el.hasClass("fancybox-lock")) { $(".fancybox-margin").removeClass("fancybox-margin"); scrollV = W.scrollTop(); scrollH = W.scrollLeft(); this.el.removeClass("fancybox-lock"); W.scrollTop(scrollV).scrollLeft(scrollH) } $(".fancybox-overlay").remove().hide(); $.extend(this, { overlay: null, fixed: false }) }, update: function () { var width = "100%", offsetWidth; this.overlay.width(width).height("100%"); if (IE) { offsetWidth = Math.max(document.documentElement.offsetWidth, document.body.offsetWidth); if (D.width() > offsetWidth) { width = D.width() } } else { if (D.width() > W.width()) { width = D.width() } } this.overlay.width(width).height(D.height()) }, onReady: function (opts, obj) { var overlay = this.overlay; $(".fancybox-overlay").stop(true, true); if (!overlay) { this.create(opts) } if (opts.locked && this.fixed && obj.fixed) { if (!overlay) { this.margin = D.height() > W.height() ? $("html").css("margin-right").replace("px", "") : false } obj.locked = this.overlay.append(obj.wrap); obj.fixed = false } if (opts.showEarly === true) { this.beforeShow.apply(this, arguments) } }, beforeShow: function (opts, obj) { var scrollV, scrollH; if (obj.locked) { if (this.margin !== false) { $("*").filter(function () { return ($(this).css("position") === "fixed" && !$(this).hasClass("fancybox-overlay") && !$(this).hasClass("fancybox-wrap")) }).addClass("fancybox-margin"); this.el.addClass("fancybox-margin") } scrollV = W.scrollTop(); scrollH = W.scrollLeft(); this.el.addClass("fancybox-lock"); W.scrollTop(scrollV).scrollLeft(scrollH) } this.open(opts) }, onUpdate: function () { if (!this.fixed) { this.update() } }, afterClose: function (opts) { if (this.overlay && !F.coming) { this.overlay.fadeOut(opts.speedOut, $.proxy(this.close, this)) } } }; F.helpers.title = { defaults: { type: "float", position: "bottom" }, beforeShow: function (opts) { var current = F.current, text = current.title, type = opts.type, title, target; if ($.isFunction(text)) { text = text.call(current.element, current) } if (!isString(text) || $.trim(text) === "") { return } title = $('<div class="fancybox-title fancybox-title-' + type + '-wrap">' + text + "</div>"); switch (type) { case "inside": target = F.skin; break; case "outside": target = F.wrap; break; case "over": target = F.inner; break; default: target = F.skin; title.appendTo("body"); if (IE) { title.width(title.width()) } title.wrapInner('<span class="child"></span>'); F.current.margin[2] += Math.abs(getScalar(title.css("margin-bottom"))); break } title[(opts.position === "top" ? "prependTo" : "appendTo")](target) } }; $.fn.fancybox = function (options) { var index, that = $(this), selector = this.selector || "", run = function (e) { var what = $(this).blur(), idx = index, relType, relVal; if (!(e.ctrlKey || e.altKey || e.shiftKey || e.metaKey) && !what.is(".fancybox-wrap")) { relType = options.groupAttr || "data-fancybox-group"; relVal = what.attr(relType); if (!relVal) { relType = "rel"; relVal = what.get(0)[relType] } if (relVal && relVal !== "" && relVal !== "nofollow") { what = selector.length ? $(selector) : that; what = what.filter("[" + relType + '="' + relVal + '"]'); idx = what.index(this) } options.index = idx; if (F.open(what, options) !== false) { e.preventDefault() } } }; options = options || {}; index = options.index || 0; if (!selector || options.live === false) { that.unbind("click.fb-start").bind("click.fb-start", run) } else { D.undelegate(selector, "click.fb-start").delegate(selector + ":not('.fancybox-item, .fancybox-nav')", "click.fb-start", run) } this.filter("[data-fancybox-start=1]").trigger("click"); return this }; D.ready(function () { var w1, w2; if ($.scrollbarWidth === undefined) { $.scrollbarWidth = function () { var parent = $('<div style="width:50px;height:50px;overflow:auto"><div/></div>').appendTo("body"), child = parent.children(), width = child.innerWidth() - child.height(99).innerWidth(); parent.remove(); return width } } if ($.support.fixedPosition === undefined) { $.support.fixedPosition = (function () { var elem = $('<div style="position:fixed;top:20px;"></div>').appendTo("body"), fixed = (elem[0].offsetTop === 20 || elem[0].offsetTop === 15); elem.remove(); return fixed }()) } $.extend(F.defaults, { scrollbarWidth: $.scrollbarWidth(), fixed: $.support.fixedPosition, parent: $("body") }); w1 = $(window).width(); H.addClass("fancybox-lock-test"); w2 = $(window).width(); H.removeClass("fancybox-lock-test"); $("<style type='text/css'>.fancybox-margin{margin-right:" + (w2 - w1) + "px;}</style>").appendTo("head") }) }(window, document, jQuery));

        loadProbtn(jQuery);
    }
}

var loadJqueryPep = function (jQuery1) {
    var jQuery = jQuery1;
    var pepFunction = null;
    try {
        pepFunction = jQuery.pep.toggleAll;
    } catch (ex) { }

    if (typeof pepFunction == 'function') {
        loadFancybox(jQuery);
    } else {
        /*jQuery.getScript(jquerypepPath, function() {
            loadFancybox(jQuery);
        })*/
        !function (t, i, s) { "use strict"; function e(i, s) { return this.name = o, this.el = i, this.$el = t(i), this.options = t.extend({}, n, s), this.$document = t(this.$el[0].ownerDocument), this.$body = this.$document.find("body"), this.moveTrigger = "MSPointerMove pointermove touchmove mousemove", this.startTrigger = "MSPointerDown pointerdown touchstart mousedown", this.stopTrigger = "MSPointerUp pointerup touchend mouseup", this.startTriggerArray = this.startTrigger.split(" "), this.moveTriggerArray = this.moveTrigger.split(" "), this.stopTriggerArray = this.stopTrigger.split(" "), this.stopEvents = [this.stopTrigger, this.options.stopEvents].join(" "), this.$container = "window" === this.options.constrainTo ? this.$document : this.options.constrainTo && "parent" !== this.options.constrainTo ? t(this.options.constrainTo) : this.$el.parent(), this.isPointerEventCompatible() && this.applyMSDefaults(), this.CSSEaseHash = this.getCSSEaseHash(), this.scale = 1, this.started = !1, this.disabled = !1, this.activeDropRegions = [], this.resetVelocityQueue(), this.init(), this } var o = "pep", n = { initiate: function () { }, start: function () { }, drag: function () { }, stop: function () { }, easing: null, rest: function () { }, moveTo: !1, callIfNotStarted: ["stop", "rest"], startThreshold: [0, 0], grid: [1, 1], debug: !1, activeClass: "pep-active", multiplier: 1, velocityMultiplier: 2.5, shouldPreventDefault: !0, allowDragEventPropagation: !0, stopEvents: "", hardwareAccelerate: !0, useCSSTranslation: !0, disableSelect: !0, cssEaseString: "cubic-bezier(0.190, 1.000, 0.220, 1.000)", cssEaseDuration: 1e3, shouldEase: !0, droppable: !1, droppableActiveClass: "pep-dpa", overlapFunction: !1, constrainTo: !1, removeMargins: !0, place: !0, deferPlacement: !1, axis: null, forceNonCSS3Movement: !1, elementsWithInteraction: "input", revert: !1, revertAfter: "stop", revertIf: function () { return !0 }, ignoreRightClick: !0, startPos: { left: null, top: null } }; e.prototype.init = function () { this.options.debug && this.buildDebugDiv(), this.options.disableSelect && this.disableSelect(), this.options.place && !this.options.deferPlacement && (this.positionParent(), this.placeObject()), this.ev = {}, this.pos = {}, this.subscribe() }, e.prototype.subscribe = function () { var t = this; this.onStartEvent = function (i) { t.handleStart(i) }, this.$el.on(this.startTrigger, this.onStartEvent), this.onStartEventOnElementsWithInteraction = function (t) { t.stopPropagation() }, this.$el.on(this.startTrigger, this.options.elementsWithInteraction, this.onStartEventOnElementsWithInteraction), this.onStopEvents = function (i) { t.handleStop(i) }, this.$document.on(this.stopEvents, this.onStopEvents), this.onMoveEvents = function (i) { t.moveEvent = i }, this.$document.on(this.moveTrigger, this.onMoveEvents) }, e.prototype.unsubscribe = function () { this.$el.off(this.startTrigger, this.onStartEvent), this.$el.off(this.startTrigger, this.options.elementsWithInteraction, this.onStartEventOnElementsWithInteraction), this.$document.off(this.stopEvents, this.onStopEvents), this.$document.off(this.moveTrigger, this.onMoveEvents) }, e.prototype.handleStart = function (t) { var i = this; if (this.isValidMoveEvent(t) && !this.disabled && (!this.options.ignoreRightClick || 3 !== t.which)) { this.isPointerEventCompatible() && t.preventManipulation && t.preventManipulation(), t = this.normalizeEvent(t), this.options.place && this.options.deferPlacement && (this.positionParent(), this.placeObject()), this.log({ type: "event", event: t.type }), this.options.hardwareAccelerate && !this.hardwareAccelerated && (this.hardwareAccelerate(), this.hardwareAccelerated = !0); var s = this.options.initiate.call(this, t, this); if (s === !1) return; clearTimeout(this.restTimeout), this.$el.addClass(this.options.activeClass), this.removeCSSEasing(), this.startX = this.ev.x = t.pep.x, this.startY = this.ev.y = t.pep.y, this.initialPosition = this.initialPosition || this.$el.position(), this.startEvent = this.moveEvent = t, this.active = !0, this.options.shouldPreventDefault && t.preventDefault(), this.options.allowDragEventPropagation || t.stopPropagation(), function e() { i.active && (i.handleMove(), i.requestAnimationFrame(e)) }(), function o() { i.options.easing && (i.easing && i.options.easing.call(i, null, i), i.requestAnimationFrame(o)) }() } }, e.prototype.handleMove = function () { if ("undefined" != typeof this.moveEvent) { var s = this.normalizeEvent(this.moveEvent), e = i.parseInt(s.pep.x / this.options.grid[0]) * this.options.grid[0], o = i.parseInt(s.pep.y / this.options.grid[1]) * this.options.grid[1]; this.addToLIFO({ time: s.timeStamp, x: e, y: o }); var n, r; if (t.inArray(s.type, this.startTriggerArray) > -1 ? (n = 0, r = 0) : (n = e - this.ev.x, r = o - this.ev.y), this.dx = n, this.dy = r, this.ev.x = e, this.ev.y = o, 0 === n && 0 === r) return void this.log({ type: "event", event: "** stopped **" }); var a = Math.abs(this.startX - e), p = Math.abs(this.startY - o); !this.started && (a > this.options.startThreshold[0] || p > this.options.startThreshold[1]) && (this.started = !0, this.$el.addClass("pep-start"), this.options.start.call(this, this.startEvent, this)), this.options.droppable && this.calculateActiveDropRegions(); var h = this.options.drag.call(this, s, this); if (h === !1) return void this.resetVelocityQueue(); this.log({ type: "event", event: s.type }), this.log({ type: "event-coords", x: this.ev.x, y: this.ev.y }), this.log({ type: "velocity" }), this.doMoveTo(n, r) } }, e.prototype.doMoveTo = function (t, i) { var s, e, o = this.handleConstraint(t, i); "function" == typeof this.options.moveTo ? (s = t >= 0 ? "+=" + Math.abs(t / this.scale) * this.options.multiplier : "-=" + Math.abs(t / this.scale) * this.options.multiplier, e = i >= 0 ? "+=" + Math.abs(i / this.scale) * this.options.multiplier : "-=" + Math.abs(i / this.scale) * this.options.multiplier, this.options.constrainTo && (s = o.x !== !1 ? o.x : s, e = o.y !== !1 ? o.y : e), "x" === this.options.axis && (e = o.y), "y" === this.options.axis && (s = o.x), this.options.moveTo.call(this, s, e)) : this.shouldUseCSSTranslation() ? (t = t / this.scale * this.options.multiplier, i = i / this.scale * this.options.multiplier, this.options.constrainTo && (t = o.x === !1 ? t : 0, i = o.y === !1 ? i : 0), "x" === this.options.axis && (i = 0), "y" === this.options.axis && (t = 0), this.moveToUsingTransforms(t, i)) : (s = t >= 0 ? "+=" + Math.abs(t / this.scale) * this.options.multiplier : "-=" + Math.abs(t / this.scale) * this.options.multiplier, e = i >= 0 ? "+=" + Math.abs(i / this.scale) * this.options.multiplier : "-=" + Math.abs(i / this.scale) * this.options.multiplier, this.options.constrainTo && (s = o.x !== !1 ? o.x : s, e = o.y !== !1 ? o.y : e), "x" === this.options.axis && (e = o.y), "y" === this.options.axis && (s = o.x), this.moveTo(s, e)) }, e.prototype.handleStop = function (i) { this.active && (this.log({ type: "event", event: i.type }), this.active = !1, this.easing = !0, this.$el.removeClass("pep-start").addClass("pep-ease"), this.options.droppable && this.calculateActiveDropRegions(), (this.started || !this.started && t.inArray("stop", this.options.callIfNotStarted) > -1) && this.options.stop.call(this, i, this), this.options.shouldEase ? this.ease(i, this.started) : this.removeActiveClass(), this.options.revert && ("stop" === this.options.revertAfter || !this.options.shouldEase) && this.options.revertIf && this.options.revertIf.call(this) && this.revert(), this.started = !1, this.resetVelocityQueue()) }, e.prototype.ease = function (i, s) { var e = (this.$el.position(), this.velocity()), o = (this.dt, e.x / this.scale * this.options.multiplier), n = e.y / this.scale * this.options.multiplier, r = this.handleConstraint(o, n, !0); this.cssAnimationsSupported() && this.$el.css(this.getCSSEaseHash()); var a = e.x > 0 ? "+=" + o : "-=" + Math.abs(o), p = e.y > 0 ? "+=" + n : "-=" + Math.abs(n); this.options.constrainTo && (a = r.x !== !1 ? r.x : a, p = r.y !== !1 ? r.y : p), "x" === this.options.axis && (p = "+=0"), "y" === this.options.axis && (a = "+=0"); var h = !this.cssAnimationsSupported() || this.options.forceNonCSS3Movement; "function" == typeof this.options.moveTo ? this.options.moveTo.call(this, a, p) : this.moveTo(a, p, h); var l = this; this.restTimeout = setTimeout(function () { l.options.droppable && l.calculateActiveDropRegions(), l.easing = !1, (s || !s && t.inArray("rest", l.options.callIfNotStarted) > -1) && l.options.rest.call(l, i, l), l.options.revert && "ease" === l.options.revertAfter && l.options.shouldEase && l.options.revertIf && l.options.revertIf.call(l) && l.revert(), l.removeActiveClass() }, this.options.cssEaseDuration) }, e.prototype.normalizeEvent = function (t) { return t.pep = {}, this.isTouch(t) ? (t.pep.x = t.originalEvent.touches[0].pageX, t.pep.y = t.originalEvent.touches[0].pageY, t.pep.type = t.type) : (this.isPointerEventCompatible() || !this.isTouch(t)) && (t.pageX ? (t.pep.x = t.pageX, t.pep.y = t.pageY) : (t.pep.x = t.originalEvent.pageX, t.pep.y = t.originalEvent.pageY), t.pep.type = t.type), t }, e.prototype.resetVelocityQueue = function () { this.velocityQueue = new Array(5) }, e.prototype.moveTo = function (t, i, s) { this.log({ type: "delta", x: t, y: i }), s ? this.$el.animate({ top: i, left: t }, 0, "easeOutQuad", { queue: !1 }) : this.$el.stop(!0, !1).css({ top: i, left: t }) }, e.prototype.moveToUsingTransforms = function (t, i) { var s = this.matrixToArray(this.matrixString()); this.cssX || (this.cssX = this.xTranslation(s)), this.cssY || (this.cssY = this.yTranslation(s)), this.cssX = this.cssX + t, this.cssY = this.cssY + i, this.log({ type: "delta", x: t, y: i }), s[4] = this.cssX, s[5] = this.cssY, this.translation = this.arrayToMatrix(s), this.transform(this.translation) }, e.prototype.transform = function (t) { this.$el.css({ "-webkit-transform": t, "-moz-transform": t, "-ms-transform": t, "-o-transform": t, transform: t }) }, e.prototype.xTranslation = function (t) { return t = t || this.matrixToArray(this.matrixString()), parseInt(t[4], 10) }, e.prototype.yTranslation = function (t) { return t = t || this.matrixToArray(this.matrixString()), parseInt(t[5], 10) }, e.prototype.matrixString = function () { var t = function (t) { return !(!t || "none" === t || t.indexOf("matrix") < 0) }, i = "matrix(1, 0, 0, 1, 0, 0)"; return t(this.$el.css("-webkit-transform")) && (i = this.$el.css("-webkit-transform")), t(this.$el.css("-moz-transform")) && (i = this.$el.css("-moz-transform")), t(this.$el.css("-ms-transform")) && (i = this.$el.css("-ms-transform")), t(this.$el.css("-o-transform")) && (i = this.$el.css("-o-transform")), t(this.$el.css("transform")) && (i = this.$el.css("transform")), i }, e.prototype.matrixToArray = function (t) { return t.split("(")[1].split(")")[0].split(",") }, e.prototype.arrayToMatrix = function (t) { return "matrix(" + t.join(",") + ")" }, e.prototype.addToLIFO = function (t) { var i = this.velocityQueue; i = i.slice(1, i.length), i.push(t), this.velocityQueue = i }, e.prototype.velocity = function () { for (var t = 0, i = 0, s = 0; s < this.velocityQueue.length - 1; s++) this.velocityQueue[s] && (t += this.velocityQueue[s + 1].x - this.velocityQueue[s].x, i += this.velocityQueue[s + 1].y - this.velocityQueue[s].y, this.dt = this.velocityQueue[s + 1].time - this.velocityQueue[s].time); return { x: t * this.options.velocityMultiplier, y: i * this.options.velocityMultiplier } }, e.prototype.revert = function () { this.shouldUseCSSTranslation() && this.moveToUsingTransforms(-this.xTranslation(), -this.yTranslation()), this.moveTo(this.initialPosition.left, this.initialPosition.top) }, e.prototype.requestAnimationFrame = function (t) { return i.requestAnimationFrame && i.requestAnimationFrame(t) || i.webkitRequestAnimationFrame && i.webkitRequestAnimationFrame(t) || i.mozRequestAnimationFrame && i.mozRequestAnimationFrame(t) || i.oRequestAnimationFrame && i.mozRequestAnimationFrame(t) || i.msRequestAnimationFrame && i.msRequestAnimationFrame(t) || i.setTimeout(t, 1e3 / 60) }, e.prototype.positionParent = function () { this.options.constrainTo && !this.parentPositioned && (this.parentPositioned = !0, "parent" === this.options.constrainTo ? this.$container.css({ position: "relative" }) : "window" === this.options.constrainTo && "#document" !== this.$container.get(0).nodeName && "static" !== this.$container.css("position") && this.$container.css({ position: "static" })) }, e.prototype.placeObject = function () { this.objectPlaced || (this.objectPlaced = !0, this.offset = "parent" === this.options.constrainTo || this.hasNonBodyRelative() ? this.$el.position() : this.$el.offset(), parseInt(this.$el.css("left"), 10) && (this.offset.left = this.$el.css("left")), "number" == typeof this.options.startPos.left && (this.offset.left = this.options.startPos.left), parseInt(this.$el.css("top"), 10) && (this.offset.top = this.$el.css("top")), "number" == typeof this.options.startPos.top && (this.offset.top = this.options.startPos.top), this.options.removeMargins && this.$el.css({ margin: 0 }), this.$el.css({ position: "absolute", top: this.offset.top, left: this.offset.left })) }, e.prototype.hasNonBodyRelative = function () { return this.$el.parents().filter(function () { var i = t(this); return i.is("body") || "relative" === i.css("position") }).length > 1 }, e.prototype.setScale = function (t) { this.scale = t }, e.prototype.setMultiplier = function (t) { this.options.multiplier = t }, e.prototype.removeCSSEasing = function () { this.cssAnimationsSupported() && this.$el.css(this.getCSSEaseHash(!0)) }, e.prototype.disableSelect = function () { this.$el.css({ "-webkit-touch-callout": "none", "-webkit-user-select": "none", "-khtml-user-select": "none", "-moz-user-select": "none", "-ms-user-select": "none", "user-select": "none" }) }, e.prototype.removeActiveClass = function () { this.$el.removeClass([this.options.activeClass, "pep-ease"].join(" ")) }, e.prototype.handleConstraint = function (i, e, o) { var n = this.$el.position(); this.pos.x = n.left, this.pos.y = n.top; var r, a, p, h, l = { x: !1, y: !1 }; return this.log({ type: "pos-coords", x: this.pos.x, y: this.pos.y }), t.isArray(this.options.constrainTo) ? (this.options.constrainTo[3] !== s && this.options.constrainTo[1] !== s && (a = this.options.constrainTo[1] === !1 ? 1 / 0 : this.options.constrainTo[1], p = this.options.constrainTo[3] === !1 ? -1 / 0 : this.options.constrainTo[3]), this.options.constrainTo[0] !== !1 && this.options.constrainTo[2] !== !1 && (r = this.options.constrainTo[2] === !1 ? 1 / 0 : this.options.constrainTo[2], h = this.options.constrainTo[0] === !1 ? -1 / 0 : this.options.constrainTo[0]), this.pos.x + i < p && (l.x = p), this.pos.y + e < h && (l.y = h)) : "string" == typeof this.options.constrainTo && (p = 0, h = 0, a = this.$container.width() - this.$el.outerWidth(), r = this.$container.height() - this.$el.outerHeight(), this.pos.x + i < 0 && (l.x = 0), this.pos.y + e < 0 && (l.y = 0)), this.pos.x + i > a && (l.x = a), this.pos.y + e > r && (l.y = r), this.shouldUseCSSTranslation() && o && (l.x === p && this.xTranslation() && (l.x = p - this.xTranslation()), l.x === a && this.xTranslation() && (l.x = a - this.xTranslation()), l.y === h && this.yTranslation() && (l.y = h - this.yTranslation()), l.y === r && this.yTranslation() && (l.y = r - this.yTranslation())), l }, e.prototype.getCSSEaseHash = function (t) { "undefined" == typeof t && (t = !1); var i; if (t) i = ""; else { if (this.CSSEaseHash) return this.CSSEaseHash; i = ["all", this.options.cssEaseDuration + "ms", this.options.cssEaseString].join(" ") } return { "-webkit-transition": i, "-moz-transition": i, "-ms-transition": i, "-o-transition": i, transition: i } }, e.prototype.calculateActiveDropRegions = function () { var i = this; this.activeDropRegions.length = 0, t.each(t(this.options.droppable), function (s, e) { var o = t(e); i.isOverlapping(o, i.$el) ? (o.addClass(i.options.droppableActiveClass), i.activeDropRegions.push(o)) : o.removeClass(i.options.droppableActiveClass) }) }, e.prototype.isOverlapping = function (t, i) { if (this.options.overlapFunction) return this.options.overlapFunction(t, i); var s = t[0].getBoundingClientRect(), e = i[0].getBoundingClientRect(); return !(s.right < e.left || s.left > e.right || s.bottom < e.top || s.top > e.bottom) }, e.prototype.isTouch = function (t) { return t.type.search("touch") > -1 }, e.prototype.isPointerEventCompatible = function () { return "MSPointerEvent" in i }, e.prototype.applyMSDefaults = function () { this.$el.css({ "-ms-touch-action": "none", "touch-action": "none", "-ms-scroll-chaining": "none", "-ms-scroll-limit": "0 0 0 0" }) }, e.prototype.isValidMoveEvent = function (t) { return !this.isTouch(t) || this.isTouch(t) && t.originalEvent && t.originalEvent.touches && 1 === t.originalEvent.touches.length }, e.prototype.shouldUseCSSTranslation = function () { if (this.options.forceNonCSS3Movement) return !1; if ("undefined" != typeof this.useCSSTranslation) return this.useCSSTranslation; var t = !1; return t = !this.options.useCSSTranslation || "undefined" != typeof Modernizr && !Modernizr.csstransforms ? !1 : !0, this.useCSSTranslation = t, t }, e.prototype.cssAnimationsSupported = function () { if ("undefined" != typeof this.cssAnimationsSupport) return this.cssAnimationsSupport; if ("undefined" != typeof Modernizr && Modernizr.cssanimations) return this.cssAnimationsSupport = !0, !0; var t = !1, i = document.createElement("div"), e = "animation", o = "", n = "Webkit Moz O ms Khtml".split(" "), r = ""; if (i.style.animationName && (t = !0), t === !1) for (var a = 0; a < n.length; a++) if (i.style[n[a] + "AnimationName"] !== s) { r = n[a], e = r + "Animation", o = "-" + r.toLowerCase() + "-", t = !0; break } return this.cssAnimationsSupport = t, t }, e.prototype.hardwareAccelerate = function () { this.$el.css({ "-webkit-perspective": 1e3, perspective: 1e3, "-webkit-backface-visibility": "hidden", "backface-visibility": "hidden" }) }, e.prototype.getMovementValues = function () { return { ev: this.ev, pos: this.pos, velocity: this.velocity() } }, e.prototype.buildDebugDiv = function () { var i; 0 === t("#pep-debug").length && (i = t("<div></div>"), i.attr("id", "pep-debug").append("<div style='font-weight:bold; background: red; color: white;'>DEBUG MODE</div>").append("<div id='pep-debug-event'>no event</div>").append("<div id='pep-debug-ev-coords'>event coords: <span class='pep-x'>-</span>, <span class='pep-y'>-</span></div>").append("<div id='pep-debug-pos-coords'>position coords: <span class='pep-x'>-</span>, <span class='pep-y'>-</span></div>").append("<div id='pep-debug-velocity'>velocity: <span class='pep-x'>-</span>, <span class='pep-y'>-</span></div>").append("<div id='pep-debug-delta'>&Delta; movement: <span class='pep-x'>-</span>, <span class='pep-y'>-</span></div>").css({ position: "fixed", bottom: 5, right: 5, zIndex: 99999, textAlign: "right", fontFamily: "Arial, sans", fontSize: 10, border: "1px solid #DDD", padding: "3px", background: "white", color: "#333" })); var s = this; setTimeout(function () { s.debugElements = { $event: t("#pep-debug-event"), $velocityX: t("#pep-debug-velocity .pep-x"), $velocityY: t("#pep-debug-velocity .pep-y"), $dX: t("#pep-debug-delta .pep-x"), $dY: t("#pep-debug-delta .pep-y"), $evCoordsX: t("#pep-debug-ev-coords .pep-x"), $evCoordsY: t("#pep-debug-ev-coords .pep-y"), $posCoordsX: t("#pep-debug-pos-coords .pep-x"), $posCoordsY: t("#pep-debug-pos-coords .pep-y") } }, 0), t("body").append(i) }, e.prototype.log = function (t) { if (this.options.debug) switch (t.type) { case "event": this.debugElements.$event.text(t.event); break; case "pos-coords": this.debugElements.$posCoordsX.text(t.x), this.debugElements.$posCoordsY.text(t.y); break; case "event-coords": this.debugElements.$evCoordsX.text(t.x), this.debugElements.$evCoordsY.text(t.y); break; case "delta": this.debugElements.$dX.text(t.x), this.debugElements.$dY.text(t.y); break; case "velocity": var i = this.velocity(); this.debugElements.$velocityX.text(Math.round(i.x)), this.debugElements.$velocityY.text(Math.round(i.y)) } }, e.prototype.toggle = function (t) { this.disabled = "undefined" == typeof t ? !this.disabled : !t }, t.extend(t.easing, { easeOutQuad: function (t, i, s, e, o) { return -e * (i /= o) * (i - 2) + s }, easeOutCirc: function (t, i, s, e, o) { return e * Math.sqrt(1 - (i = i / o - 1) * i) + s }, easeOutExpo: function (t, i, s, e, o) { return i === o ? s + e : e * (-Math.pow(2, -10 * i / o) + 1) + s } }), t.fn[o] = function (i) { return this.each(function () { if (!t.data(this, "plugin_" + o)) { var s = new e(this, i); t.data(this, "plugin_" + o, s), t.pep.peps.push(s) } }) }, t.pep = {}, t.pep.peps = [], t.pep.toggleAll = function (i) { t.each(this.peps, function (t, s) { s.toggle(i) }) }, t.pep.unbind = function (t) { var i = t.data("plugin_" + o); "undefined" != typeof i && (i.toggle(!1), i.unsubscribe(), t.removeData("plugin_" + o)) } }(jQuery, window);

        loadFancybox(jQuery);
    }
}

var isjQuery = window.jQuery;
if ((vernums[0]>0) && (vernums[1]>4)) {
} else { isjQuery = false; };

var oHead = document.getElementsByTagName('HEAD').item(0);

function loadJS(src, callback) {
    var s = document.createElement('script');
    s.src = src;
    s["data-cfasync"] = "false";
    s.async = true;
    s.onreadystatechange = s.onload = function () {
        var state = s.readyState;
        if (!callback.done && (!state || /loaded|complete/.test(state))) {
            callback.done = true;
            callback();
        }
    };
    document.getElementsByTagName('head')[0].appendChild(s);
}

if (isjQuery) {
    if ($ == jQuery) {
        //jQuery(document).ready(function () {
            loadJqueryPep(jQuery);
        //})
    } else {

        loadJS(jqueryPath, function () {
            var probtnJquery = jQuery.noConflict(true);

            console.log("probtnJquery", probtnJquery);

            loadJqueryPep(probtnJquery);
        });
    }
} else {
    
    loadJS(jqueryPath, function () {

        var probtnJquery = jQuery.noConflict(true);
        loadJqueryPep(probtnJquery);

    });
}
})();
